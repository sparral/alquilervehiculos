/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alquilervehiculos.vista;

import alquilervehiculos.controlador.*;
import alquilervehiculos.excepciones.*;
import alquilervehiculos.modelo.vehiculo.AlquilarVehiculo;
import alquilervehiculos.modelo.usuario.TipoUsuario;
import alquilervehiculos.modelo.usuario.Usuario;
import alquilervehiculos.modelo.vehiculo.AbstractVehiculo;
import alquilervehiculos.modelo.vehiculo.Auto;
import alquilervehiculos.modelo.vehiculo.Furgoneta;
import alquilervehiculos.modelo.vehiculo.Moto;
import alquilervehiculos.modelo.vehiculo.TipoMarca;
import alquilervehiculos.utilidades.ConvertirFecha;
import alquilervehiculos.utilidades.CrearGraficas;
import alquilervehiculos.utilidades.CrearPDF;
import alquilervehiculos.utilidades.ImportarCSV;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author Santy
 */
public class MDIPrincipal extends javax.swing.JFrame {

    private final ControladorUsuario controlUsuario;
    private ControladorVehiculo controlVehiculo;
    private AlquilarVehiculo alquilar;
    private CrearPDF pdfs;
    private CrearGraficas graficas;

    private boolean editarUsuario = false;
    private boolean editarVehiculo = false;
    private boolean bandera = false;
    private boolean banderaMarcas = false;
    private boolean banderaAlquilar = false;
    private boolean banderaFecha = false;

    private final ConvertirFecha convertir = new ConvertirFecha();
    Date fechaActual = new Date();
    String fechaLocal = LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM"));

    /**
     * Creates new form MDIPrincipal
     */
    public MDIPrincipal() {
        initComponents();
        setLocationRelativeTo(null);
        controlUsuario = new ControladorUsuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngTarifaAlquilar = new javax.swing.ButtonGroup();
        btngTarifaUsuario = new javax.swing.ButtonGroup();
        desktopPane = new javax.swing.JDesktopPane();
        jfrmLogin = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnIngresar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnInvitado = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jfrmRegistrarUsuario = new javax.swing.JInternalFrame();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnAceptarRegistro = new javax.swing.JButton();
        btnCancelarRegistro = new javax.swing.JButton();
        spnNuevaEdad = new javax.swing.JSpinner();
        jLabel41 = new javax.swing.JLabel();
        txtNuevoNombre = new javax.swing.JTextField();
        txtNuevoApellido = new javax.swing.JTextField();
        txtNuevoCorreo = new javax.swing.JTextField();
        txtNuevaPassword = new javax.swing.JPasswordField();
        txtConfirmarPassword = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        cbxAuditivoRegistro = new javax.swing.JCheckBox();
        cbxVisionRegistro = new javax.swing.JCheckBox();
        cbxTerminos = new javax.swing.JCheckBox();
        jfrmPrincipalAdmin = new javax.swing.JInternalFrame();
        jpFiltrosAdmin = new javax.swing.JPanel();
        btnValidarAdmin = new javax.swing.JButton();
        btnLimpiarAdmin = new javax.swing.JButton();
        btnAlquilarAdmin = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combobxVehiculoAdmin = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        combobxMarcaAdmin = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txtMatriculaAdmin = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        combobxEstadoAdmin = new javax.swing.JComboBox<>();
        jpTablaAdmin = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehiculosAdmin = new javax.swing.JTable();
        mnuBarAdmin = new javax.swing.JMenuBar();
        jmnuArchivo = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mnuCargarAutos = new javax.swing.JMenuItem();
        mnuCargarMotos = new javax.swing.JMenuItem();
        mnuCargarFurgonetas = new javax.swing.JMenuItem();
        jmnuPDF = new javax.swing.JMenu();
        mnuAutosPDF = new javax.swing.JMenuItem();
        mnuMotosPDF = new javax.swing.JMenuItem();
        mnuFurgonetasPDF = new javax.swing.JMenuItem();
        mnuReportes = new javax.swing.JMenuItem();
        mnuClientes = new javax.swing.JMenuItem();
        jmnuEditar = new javax.swing.JMenu();
        mnuEditarUsuarios = new javax.swing.JMenuItem();
        mnuEditarVehiculos = new javax.swing.JMenuItem();
        jfrmPrincipalUsuario = new javax.swing.JInternalFrame();
        jpTablaUsuario = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVehiculosUsuario = new javax.swing.JTable();
        jpFiltrosUsuario = new javax.swing.JPanel();
        cbxDisponibleUsuario = new javax.swing.JCheckBox();
        combobxMarcaUsuario = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        combobxVehiculoUsuario = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btnLimpiarUsuario = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel29 = new javax.swing.JLabel();
        jdcInicialUsuario = new com.toedter.calendar.JDateChooser();
        jdcFinalUsuario = new com.toedter.calendar.JDateChooser();
        jLabel30 = new javax.swing.JLabel();
        rbtnTarifaDiaUsuario = new javax.swing.JRadioButton();
        rbtnTarifaKmUsuario = new javax.swing.JRadioButton();
        jfrmUsuariosCRUD = new javax.swing.JInternalFrame();
        jpDatosUsuario = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        txtApellidoUsuario = new javax.swing.JTextField();
        txtPasswordUsuario = new javax.swing.JPasswordField();
        txtCorreoUsuario = new javax.swing.JTextField();
        combobxTipoUsuario = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        spnEdadUsuario = new javax.swing.JSpinner();
        cbxAuditivoCRUD = new javax.swing.JCheckBox();
        cbxVisionCRUD = new javax.swing.JCheckBox();
        jLabel47 = new javax.swing.JLabel();
        btnEliminarUsuario = new javax.swing.JToggleButton();
        btnEditarUsuario = new javax.swing.JToggleButton();
        btnGuardarUsuario = new javax.swing.JToggleButton();
        btnLimpiarUsuarioCRUD = new javax.swing.JButton();
        jpUsuarioCRUD = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblUsuarioCRUD = new javax.swing.JTable();
        jfrmVehiculosCRUD = new javax.swing.JInternalFrame();
        jtpTablasVehiculos = new javax.swing.JTabbedPane();
        jpAutoCRUD = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAutoCRUD = new javax.swing.JTable();
        jpMotoCRUD = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblMotoCRUD = new javax.swing.JTable();
        jpFurgonetaCRUD = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblFurgonetaCRUD = new javax.swing.JTable();
        jpDatosVehiculo = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtMatriculaCRUD = new javax.swing.JTextField();
        combobxMarcaCRUD = new javax.swing.JComboBox<>();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtKilometrajeCRUD = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        sldCapacidadCRUD = new javax.swing.JSlider();
        jLabelCapacidad = new javax.swing.JLabel();
        combobxVehiculoCRUD = new javax.swing.JComboBox<>();
        jLabel49 = new javax.swing.JLabel();
        cbxExtrasCRUD = new javax.swing.JCheckBox();
        cbxCascoCRUD = new javax.swing.JCheckBox();
        sldTarifaDiaCRUD = new javax.swing.JSlider();
        sldTarifaKmCRUD = new javax.swing.JSlider();
        jLabel36 = new javax.swing.JLabel();
        jLabelTarifaKm = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        btnEditarVehiculo = new javax.swing.JToggleButton();
        btnGuardarVehiculo = new javax.swing.JToggleButton();
        btnLimpiarVehiculoCRUD = new javax.swing.JButton();
        btnEliminarVehiculo = new javax.swing.JToggleButton();
        jLabelTarifaDia = new javax.swing.JLabel();
        jycVehiculoCRUD = new com.toedter.calendar.JYearChooser();
        jfrmAlquilarVehiculo = new javax.swing.JInternalFrame();
        jpDatosAlquilar = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtClienteAlquilar = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtMatriculaAlquilar = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        rbtnTarifaDiaAlquilar = new javax.swing.JRadioButton();
        rbtnTarifaKmAlquilar = new javax.swing.JRadioButton();
        jSeparator4 = new javax.swing.JSeparator();
        btnAceptarAlquilar = new javax.swing.JButton();
        btnCancelarAlquilar = new javax.swing.JButton();
        jdcInicialAlquilar = new com.toedter.calendar.JDateChooser();
        jdcFinalAlquilar = new com.toedter.calendar.JDateChooser();
        jpDatosMostrar = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblUsuarioAlquilar = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        atxtDatosAlquilar = new javax.swing.JTextArea();
        jfrmValidarVehiculo = new javax.swing.JInternalFrame();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtMatriculaValidar = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        combobxEstadoValidar = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtKilometrajevalidar = new javax.swing.JTextField();
        checkbvLimpieza = new javax.swing.JCheckBox();
        checkbxGasolina = new javax.swing.JCheckBox();
        checkbxEspejos = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        atxtObservaciones = new javax.swing.JTextArea();
        btnAceptarValidacion = new javax.swing.JButton();
        btnCancelarValidacion = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        atxtDatosValidar = new javax.swing.JTextArea();
        jSeparator5 = new javax.swing.JSeparator();
        txtClienteValidar = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jfrmReportes = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpPromedios = new javax.swing.JPanel();
        jpDatosPromedio = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblReportePromedio = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jdcFechaInicialReporte = new com.toedter.calendar.JDateChooser();
        jdcFechaFinalReporte = new com.toedter.calendar.JDateChooser();
        jpGraficaPromedio = new javax.swing.JPanel();
        txtPromedioAutos = new javax.swing.JTextField();
        txtPromedioMotos = new javax.swing.JTextField();
        txtPromedioFurgonetas = new javax.swing.JTextField();
        jpDisponibles = new javax.swing.JPanel();
        jfrmClientes = new javax.swing.JInternalFrame();
        jpTablaClientes = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jpDatosCliente = new javax.swing.JPanel();
        combobxTipoCliente = new javax.swing.JComboBox<>();
        checkbxClientesHoy = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        btnAlquilarCliente = new javax.swing.JButton();
        btnValidarCliente = new javax.swing.JButton();
        btnLimpiarCliente = new javax.swing.JButton();
        txtMatriculaCliente = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        mnuGeneral = new javax.swing.JMenu();
        mnuCerrarSesion = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jfrmLogin.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmLogin.setTitle("LogIn");
        jfrmLogin.setVisible(true);

        jLabel1.setText("* Usuario:");

        jLabel2.setText("* Contraseña:");

        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreosKeyTyped(evt);
            }
        });

        btnIngresar.setText("INGRESAR");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnInvitado.setText("INVITADO");

        jLabel3.setText("¡Regístrate!");

        jLabel4.setText("¿No tienes cuenta todavía?");

        javax.swing.GroupLayout jfrmLoginLayout = new javax.swing.GroupLayout(jfrmLogin.getContentPane());
        jfrmLogin.getContentPane().setLayout(jfrmLoginLayout);
        jfrmLoginLayout.setHorizontalGroup(
            jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jfrmLoginLayout.createSequentialGroup()
                        .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuario)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(jfrmLoginLayout.createSequentialGroup()
                        .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInvitado, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmLoginLayout.createSequentialGroup()
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmLoginLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmLoginLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(64, 64, 64))))
        );
        jfrmLoginLayout.setVerticalGroup(
            jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmLoginLayout.createSequentialGroup()
                .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfrmLoginLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(37, 37, 37)
                        .addGroup(jfrmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jfrmLoginLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInvitado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        desktopPane.add(jfrmLogin);
        jfrmLogin.setBounds(170, 80, 510, 260);

        jfrmRegistrarUsuario.setClosable(true);
        jfrmRegistrarUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmRegistrarUsuario.setMaximizable(true);
        jfrmRegistrarUsuario.setTitle("Crear Cuenta");
        jfrmRegistrarUsuario.setVisible(false);

        jLabel5.setText("* Nombre:");

        jLabel6.setText("* Apellido:");

        jLabel8.setText("* Correo:");

        jLabel9.setText("* Contraseña:");

        jLabel10.setText("* Edad:");

        btnAceptarRegistro.setText("REGISTRAR");
        btnAceptarRegistro.setEnabled(false);
        btnAceptarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarRegistroActionPerformed(evt);
            }
        });

        btnCancelarRegistro.setText("CANCELAR");
        btnCancelarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarRegistroActionPerformed(evt);
            }
        });

        spnNuevaEdad.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)18), Byte.valueOf((byte)15), Byte.valueOf((byte)90), Byte.valueOf((byte)2)));
        spnNuevaEdad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel41.setText("* Confirmar:");
        jLabel41.setToolTipText("");

        txtNuevoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposRegistroKeyTyped(evt);
                txtNombresKeyTyped(evt);
            }
        });

        txtNuevoApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposRegistroKeyTyped(evt);
                txtNombresKeyTyped(evt);
            }
        });

        txtNuevoCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposRegistroKeyTyped(evt);
            }
        });

        txtNuevaPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposRegistroKeyTyped(evt);
            }
        });

        txtConfirmarPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposRegistroKeyTyped(evt);
            }
        });

        cbxAuditivoRegistro.setText("Problemas Auditivos");

        cbxVisionRegistro.setText("Problemas de Visión");

        cbxTerminos.setText("Términos y Condiciones *");
        cbxTerminos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTerminosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxAuditivoRegistro)
                    .addComponent(cbxVisionRegistro)
                    .addComponent(cbxTerminos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxAuditivoRegistro)
                .addGap(18, 18, 18)
                .addComponent(cbxVisionRegistro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(cbxTerminos)
                .addContainerGap())
        );

        javax.swing.GroupLayout jfrmRegistrarUsuarioLayout = new javax.swing.GroupLayout(jfrmRegistrarUsuario.getContentPane());
        jfrmRegistrarUsuario.getContentPane().setLayout(jfrmRegistrarUsuarioLayout);
        jfrmRegistrarUsuarioLayout.setHorizontalGroup(
            jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnAceptarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                .addComponent(btnCancelarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(spnNuevaEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())))
                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNuevaPassword)
                                    .addComponent(txtConfirmarPassword)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNuevoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNuevoApellido)
                                    .addComponent(txtNuevoCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jfrmRegistrarUsuarioLayout.setVerticalGroup(
            jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNuevoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(spnNuevaEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtNuevoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfrmRegistrarUsuarioLayout.createSequentialGroup()
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtNuevoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNuevaPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConfirmarPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(jfrmRegistrarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        desktopPane.add(jfrmRegistrarUsuario);
        jfrmRegistrarUsuario.setBounds(200, 10, 470, 440);

        jfrmPrincipalAdmin.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmPrincipalAdmin.setMaximizable(true);
        jfrmPrincipalAdmin.setTitle("Principal Administrador");
        jfrmPrincipalAdmin.setVisible(false);

        jpFiltrosAdmin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtros de búsqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        btnValidarAdmin.setText("VALIDAR");
        btnValidarAdmin.setEnabled(false);
        btnValidarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarAdminActionPerformed(evt);
            }
        });

        btnLimpiarAdmin.setText("LIMPIAR");
        btnLimpiarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarAdminActionPerformed(evt);
            }
        });

        btnAlquilarAdmin.setText("ALQUILAR");
        btnAlquilarAdmin.setEnabled(false);
        btnAlquilarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlquilarAdminActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Estado:");

        jLabel7.setText("Tipo:");

        combobxVehiculoAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Auto", "Moto", "Furgoneta" }));
        combobxVehiculoAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxVehiculoAdminItemStateChanged(evt);
            }
        });

        jLabel20.setText("Marca:");

        combobxMarcaAdmin.setEnabled(false);
        combobxMarcaAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxMarcaAdminItemStateChanged(evt);
            }
        });

        jLabel21.setText("Matricula:");

        txtMatriculaAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatriculaAdminKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculasKeyTyped(evt);
            }
        });

        combobxEstadoAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Disponibles", "Alquilados" }));
        combobxEstadoAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxEstadoAdminItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpFiltrosAdminLayout = new javax.swing.GroupLayout(jpFiltrosAdmin);
        jpFiltrosAdmin.setLayout(jpFiltrosAdminLayout);
        jpFiltrosAdminLayout.setHorizontalGroup(
            jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                                .addComponent(btnLimpiarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnValidarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAlquilarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel20)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combobxVehiculoAdmin, 0, 169, Short.MAX_VALUE)
                            .addComponent(combobxMarcaAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combobxEstadoAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(txtMatriculaAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jpFiltrosAdminLayout.setVerticalGroup(
            jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosAdminLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(combobxEstadoAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combobxVehiculoAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(combobxMarcaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtMatriculaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAlquilarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFiltrosAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValidarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        tblVehiculosAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disponible", "Tipo", "Matrícula", "Marca", "Año", "Cliente", "Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVehiculosAdmin.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblVehiculosAdmin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tblVehiculosAdminMouseDragged(evt);
            }
        });
        tblVehiculosAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosAdminMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVehiculosAdmin);
        if (tblVehiculosAdmin.getColumnModel().getColumnCount() > 0) {
            tblVehiculosAdmin.getColumnModel().getColumn(0).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblVehiculosAdmin.getColumnModel().getColumn(1).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(2).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(3).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(4).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(4).setPreferredWidth(50);
            tblVehiculosAdmin.getColumnModel().getColumn(5).setResizable(false);
            tblVehiculosAdmin.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout jpTablaAdminLayout = new javax.swing.GroupLayout(jpTablaAdmin);
        jpTablaAdmin.setLayout(jpTablaAdminLayout);
        jpTablaAdminLayout.setHorizontalGroup(
            jpTablaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
        );
        jpTablaAdminLayout.setVerticalGroup(
            jpTablaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        jmnuArchivo.setText("Archivo");

        jMenu2.setText("Cargar CSV");

        mnuCargarAutos.setText("Autos");
        mnuCargarAutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCargarAutosActionPerformed(evt);
            }
        });
        jMenu2.add(mnuCargarAutos);

        mnuCargarMotos.setText("Motos");
        mnuCargarMotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCargarMotosActionPerformed(evt);
            }
        });
        jMenu2.add(mnuCargarMotos);

        mnuCargarFurgonetas.setText("Furgonetas");
        mnuCargarFurgonetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCargarFurgonetasActionPerformed(evt);
            }
        });
        jMenu2.add(mnuCargarFurgonetas);

        jmnuArchivo.add(jMenu2);

        jmnuPDF.setText("Generar PDF");

        mnuAutosPDF.setText("Autos");
        mnuAutosPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAutosPDFActionPerformed(evt);
            }
        });
        jmnuPDF.add(mnuAutosPDF);

        mnuMotosPDF.setText("Motos");
        mnuMotosPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMotosPDFActionPerformed(evt);
            }
        });
        jmnuPDF.add(mnuMotosPDF);

        mnuFurgonetasPDF.setText("Furgonetas");
        mnuFurgonetasPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFurgonetasPDFActionPerformed(evt);
            }
        });
        jmnuPDF.add(mnuFurgonetasPDF);

        jmnuArchivo.add(jmnuPDF);

        mnuReportes.setText("Reportes");
        mnuReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReportesActionPerformed(evt);
            }
        });
        jmnuArchivo.add(mnuReportes);

        mnuClientes.setText("Clientes");
        mnuClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuClientesActionPerformed(evt);
            }
        });
        jmnuArchivo.add(mnuClientes);

        mnuBarAdmin.add(jmnuArchivo);

        jmnuEditar.setText("Editar");

        mnuEditarUsuarios.setText("Usuarios");
        mnuEditarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditarUsuariosActionPerformed(evt);
            }
        });
        jmnuEditar.add(mnuEditarUsuarios);

        mnuEditarVehiculos.setText("Vehiculos");
        mnuEditarVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditarVehiculosActionPerformed(evt);
            }
        });
        jmnuEditar.add(mnuEditarVehiculos);

        mnuBarAdmin.add(jmnuEditar);

        jfrmPrincipalAdmin.setJMenuBar(mnuBarAdmin);

        javax.swing.GroupLayout jfrmPrincipalAdminLayout = new javax.swing.GroupLayout(jfrmPrincipalAdmin.getContentPane());
        jfrmPrincipalAdmin.getContentPane().setLayout(jfrmPrincipalAdminLayout);
        jfrmPrincipalAdminLayout.setHorizontalGroup(
            jfrmPrincipalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmPrincipalAdminLayout.createSequentialGroup()
                .addComponent(jpFiltrosAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jpTablaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jfrmPrincipalAdminLayout.setVerticalGroup(
            jfrmPrincipalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmPrincipalAdminLayout.createSequentialGroup()
                .addGroup(jfrmPrincipalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpFiltrosAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpTablaAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        desktopPane.add(jfrmPrincipalAdmin);
        jfrmPrincipalAdmin.setBounds(10, 0, 840, 550);

        jfrmPrincipalUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmPrincipalUsuario.setMaximizable(true);
        jfrmPrincipalUsuario.setTitle("Principal Usuario");
        jfrmPrincipalUsuario.setVisible(false);

        tblVehiculosUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Disponible", "Tipo", "Marca", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVehiculosUsuario);

        javax.swing.GroupLayout jpTablaUsuarioLayout = new javax.swing.GroupLayout(jpTablaUsuario);
        jpTablaUsuario.setLayout(jpTablaUsuarioLayout);
        jpTablaUsuarioLayout.setHorizontalGroup(
            jpTablaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTablaUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpTablaUsuarioLayout.setVerticalGroup(
            jpTablaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTablaUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpFiltrosUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtros de búsqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        cbxDisponibleUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbxDisponibleUsuario.setText("Disponible");
        cbxDisponibleUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDisponibleUsuarioActionPerformed(evt);
            }
        });

        combobxMarcaUsuario.setEnabled(false);
        combobxMarcaUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxMarcaUsuarioItemStateChanged(evt);
            }
        });

        jLabel22.setText("Marca:");

        combobxVehiculoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Auto", "Moto", "Furgoneta" }));
        combobxVehiculoUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxVehiculoUsuarioItemStateChanged(evt);
            }
        });

        jLabel11.setText("Tipo:");

        btnLimpiarUsuario.setText("LIMPIAR");
        btnLimpiarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarUsuarioActionPerformed(evt);
            }
        });

        jLabel29.setText("Fechas:");

        jdcInicialUsuario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcInicialUsuarioPropertyChange(evt);
            }
        });

        jdcFinalUsuario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFinalUsuarioPropertyChange(evt);
            }
        });

        jLabel30.setText("Tarifa:");

        btngTarifaUsuario.add(rbtnTarifaDiaUsuario);
        rbtnTarifaDiaUsuario.setSelected(true);
        rbtnTarifaDiaUsuario.setText("Dia");

        btngTarifaUsuario.add(rbtnTarifaKmUsuario);
        rbtnTarifaKmUsuario.setText("Km");

        javax.swing.GroupLayout jpFiltrosUsuarioLayout = new javax.swing.GroupLayout(jpFiltrosUsuario);
        jpFiltrosUsuario.setLayout(jpFiltrosUsuarioLayout);
        jpFiltrosUsuarioLayout.setHorizontalGroup(
            jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combobxMarcaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combobxVehiculoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxDisponibleUsuario))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30))
                        .addGap(18, 18, 18)
                        .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcFinalUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcInicialUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                                .addComponent(rbtnTarifaDiaUsuario)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnTarifaKmUsuario)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimpiarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFiltrosUsuarioLayout.setVerticalGroup(
            jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosUsuarioLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(combobxVehiculoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(combobxMarcaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cbxDisponibleUsuario)
                .addGap(21, 21, 21)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(rbtnTarifaDiaUsuario)
                    .addComponent(rbtnTarifaKmUsuario))
                .addGap(30, 30, 30)
                .addGroup(jpFiltrosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addComponent(jdcInicialUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jdcFinalUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jfrmPrincipalUsuarioLayout = new javax.swing.GroupLayout(jfrmPrincipalUsuario.getContentPane());
        jfrmPrincipalUsuario.getContentPane().setLayout(jfrmPrincipalUsuarioLayout);
        jfrmPrincipalUsuarioLayout.setHorizontalGroup(
            jfrmPrincipalUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmPrincipalUsuarioLayout.createSequentialGroup()
                .addComponent(jpFiltrosUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTablaUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jfrmPrincipalUsuarioLayout.setVerticalGroup(
            jfrmPrincipalUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmPrincipalUsuarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jfrmPrincipalUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpFiltrosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpTablaUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        desktopPane.add(jfrmPrincipalUsuario);
        jfrmPrincipalUsuario.setBounds(70, 20, 670, 490);

        jfrmUsuariosCRUD.setClosable(true);
        jfrmUsuariosCRUD.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmUsuariosCRUD.setIconifiable(true);
        jfrmUsuariosCRUD.setTitle("Crear/Editar Usuario");
        jfrmUsuariosCRUD.setVisible(false);

        jpDatosUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel42.setText("* Nombre:");

        jLabel43.setText("* Apellido:");

        jLabel44.setText("* Correo:");

        jLabel45.setText("* Contraseña:");

        txtNombreUsuario.setNextFocusableComponent(txtApellidoUsuario);
        txtNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposUsuarioCRUDKeyTyped(evt);
                txtNombresKeyTyped(evt);
            }
        });

        txtApellidoUsuario.setNextFocusableComponent(txtCorreoUsuario);
        txtApellidoUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposUsuarioCRUDKeyTyped(evt);
                txtNombresKeyTyped(evt);
            }
        });

        txtPasswordUsuario.setNextFocusableComponent(spnEdadUsuario);
        txtPasswordUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposUsuarioCRUDKeyTyped(evt);
            }
        });

        txtCorreoUsuario.setNextFocusableComponent(txtPasswordUsuario);
        txtCorreoUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposUsuarioCRUDKeyTyped(evt);
                txtCorreosKeyTyped(evt);
            }
        });

        combobxTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Administrador", "Usuario" }));
        combobxTipoUsuario.setNextFocusableComponent(txtNombreUsuario);
        combobxTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobxTipoUsuarioActionPerformed(evt);
            }
        });

        jLabel46.setText("* Tipo:");

        spnEdadUsuario.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)18), Byte.valueOf((byte)15), Byte.valueOf((byte)90), Byte.valueOf((byte)2)));
        spnEdadUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spnEdadUsuario.setNextFocusableComponent(cbxAuditivoCRUD);

        cbxAuditivoCRUD.setText("Problemas Auditivos");
        cbxAuditivoCRUD.setNextFocusableComponent(cbxVisionCRUD);

        cbxVisionCRUD.setText("Problemas de Visión");
        cbxVisionCRUD.setNextFocusableComponent(btnGuardarUsuario);

        jLabel47.setText("* Edad:");

        btnEliminarUsuario.setText("ELIMINAR");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        btnEditarUsuario.setText("EDITAR");
        btnEditarUsuario.setNextFocusableComponent(txtNombreUsuario);
        btnEditarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarUsuarioActionPerformed(evt);
            }
        });

        btnGuardarUsuario.setText("GUARDAR");
        btnGuardarUsuario.setEnabled(false);
        btnGuardarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarUsuarioActionPerformed(evt);
            }
        });

        btnLimpiarUsuarioCRUD.setText("LIMPIAR");
        btnLimpiarUsuarioCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarUsuarioCRUDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDatosUsuarioLayout = new javax.swing.GroupLayout(jpDatosUsuario);
        jpDatosUsuario.setLayout(jpDatosUsuarioLayout);
        jpDatosUsuarioLayout.setHorizontalGroup(
            jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtApellidoUsuario)))
                    .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel46)
                        .addGap(18, 18, 18)
                        .addComponent(combobxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                                .addComponent(jLabel45)
                                .addGap(18, 18, 18)
                                .addComponent(txtPasswordUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGap(18, 18, 18)
                        .addComponent(spnEdadUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxAuditivoCRUD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbxVisionCRUD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosUsuarioLayout.createSequentialGroup()
                                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnGuardarUsuario)
                                    .addComponent(btnEditarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLimpiarUsuarioCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        jpDatosUsuarioLayout.setVerticalGroup(
            jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(spnEdadUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxAuditivoCRUD))
                .addGap(11, 11, 11)
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(txtApellidoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxVisionCRUD))
                .addGap(18, 18, 18)
                .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPasswordUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45)))
                    .addGroup(jpDatosUsuarioLayout.createSequentialGroup()
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(btnLimpiarUsuarioCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblUsuarioCRUD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Usuario", "Nombre", "Apellido", "Edad", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarioCRUD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblUsuarioCRUD.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(tblUsuarioCRUD);

        javax.swing.GroupLayout jpUsuarioCRUDLayout = new javax.swing.GroupLayout(jpUsuarioCRUD);
        jpUsuarioCRUD.setLayout(jpUsuarioCRUDLayout);
        jpUsuarioCRUDLayout.setHorizontalGroup(
            jpUsuarioCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );
        jpUsuarioCRUDLayout.setVerticalGroup(
            jpUsuarioCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUsuarioCRUDLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jfrmUsuariosCRUDLayout = new javax.swing.GroupLayout(jfrmUsuariosCRUD.getContentPane());
        jfrmUsuariosCRUD.getContentPane().setLayout(jfrmUsuariosCRUDLayout);
        jfrmUsuariosCRUDLayout.setHorizontalGroup(
            jfrmUsuariosCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpDatosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpUsuarioCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jfrmUsuariosCRUDLayout.setVerticalGroup(
            jfrmUsuariosCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmUsuariosCRUDLayout.createSequentialGroup()
                .addComponent(jpDatosUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpUsuarioCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        desktopPane.add(jfrmUsuariosCRUD);
        jfrmUsuariosCRUD.setBounds(80, 14, 520, 480);

        jfrmVehiculosCRUD.setClosable(true);
        jfrmVehiculosCRUD.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmVehiculosCRUD.setIconifiable(true);
        jfrmVehiculosCRUD.setTitle("Crear/Editar Vehiculo");
        jfrmVehiculosCRUD.setVisible(false);

        jpAutoCRUD.setName("Auto"); // NOI18N

        tblAutoCRUD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Matrícula", "Marca", "Año", "Kilometraje", "Activar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAutoCRUD.setName("Tabla Auto"); // NOI18N
        tblAutoCRUD.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAutoCRUD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblAutoCRUDFocusGained(evt);
            }
        });
        tblAutoCRUD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosCRUDMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblAutoCRUD);

        javax.swing.GroupLayout jpAutoCRUDLayout = new javax.swing.GroupLayout(jpAutoCRUD);
        jpAutoCRUD.setLayout(jpAutoCRUDLayout);
        jpAutoCRUDLayout.setHorizontalGroup(
            jpAutoCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jpAutoCRUDLayout.setVerticalGroup(
            jpAutoCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        jtpTablasVehiculos.addTab("Auto", jpAutoCRUD);

        jpMotoCRUD.setName("Moto"); // NOI18N

        tblMotoCRUD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Matrícula", "Marca", "Año", "Kilometraje", "Activar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMotoCRUD.setName("Tabla Moto"); // NOI18N
        tblMotoCRUD.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblMotoCRUD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblMotoCRUDFocusGained(evt);
            }
        });
        tblMotoCRUD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosCRUDMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tblMotoCRUD);

        javax.swing.GroupLayout jpMotoCRUDLayout = new javax.swing.GroupLayout(jpMotoCRUD);
        jpMotoCRUD.setLayout(jpMotoCRUDLayout);
        jpMotoCRUDLayout.setHorizontalGroup(
            jpMotoCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jpMotoCRUDLayout.setVerticalGroup(
            jpMotoCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        jtpTablasVehiculos.addTab("Moto", jpMotoCRUD);

        jpFurgonetaCRUD.setName("Furgoneta"); // NOI18N

        tblFurgonetaCRUD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Matrícula", "Marca", "Año", "Kilometraje", "Activar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFurgonetaCRUD.setName("Tabla Furgoneta"); // NOI18N
        tblFurgonetaCRUD.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblFurgonetaCRUD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblFurgonetaCRUDFocusGained(evt);
            }
        });
        tblFurgonetaCRUD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosCRUDMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblFurgonetaCRUD);

        javax.swing.GroupLayout jpFurgonetaCRUDLayout = new javax.swing.GroupLayout(jpFurgonetaCRUD);
        jpFurgonetaCRUD.setLayout(jpFurgonetaCRUDLayout);
        jpFurgonetaCRUDLayout.setHorizontalGroup(
            jpFurgonetaCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jpFurgonetaCRUDLayout.setVerticalGroup(
            jpFurgonetaCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        jtpTablasVehiculos.addTab("Furgoneta", jpFurgonetaCRUD);

        jpDatosVehiculo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel34.setText("* Matrícula:");

        jLabel35.setText("* Marca:");

        txtMatriculaCRUD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposVehiculoCRUDKeyTyped(evt);
                txtMatriculasKeyTyped(evt);
            }
        });

        combobxMarcaCRUD.setEnabled(false);
        combobxMarcaCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobxMarcaCRUDActionPerformed(evt);
            }
        });

        jLabel39.setText("* Año:");

        jLabel40.setText("* Kilometraje:");

        txtKilometrajeCRUD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCamposVehiculoCRUDKeyTyped(evt);
                txtKilometrajesKeyTyped(evt);
            }
        });

        jLabel48.setText("* Capacidad:");
        jLabel48.setEnabled(false);

        sldCapacidadCRUD.setMajorTickSpacing(200);
        sldCapacidadCRUD.setMaximum(1400);
        sldCapacidadCRUD.setMinimum(600);
        sldCapacidadCRUD.setPaintTicks(true);
        sldCapacidadCRUD.setValue(800);
        sldCapacidadCRUD.setEnabled(false);
        sldCapacidadCRUD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldCapacidadCRUDStateChanged(evt);
            }
        });

        jLabelCapacidad.setText(sldCapacidadCRUD.getValue() + " kg");
        jLabelCapacidad.setEnabled(false);

        combobxVehiculoCRUD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Auto", "Moto", "Furgoneta" }));
        combobxVehiculoCRUD.setToolTipText("");
        combobxVehiculoCRUD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxVehiculoCRUDItemStateChanged(evt);
            }
        });
        combobxVehiculoCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobxVehiculoCRUDActionPerformed(evt);
            }
        });

        jLabel49.setText("* Tipo:");

        cbxExtrasCRUD.setText("Extras");
        cbxExtrasCRUD.setEnabled(false);

        cbxCascoCRUD.setText("Casco");
        cbxCascoCRUD.setEnabled(false);

        sldTarifaDiaCRUD.setMajorTickSpacing(50000);
        sldTarifaDiaCRUD.setMaximum(200000);
        sldTarifaDiaCRUD.setMinimum(50000);
        sldTarifaDiaCRUD.setPaintTicks(true);
        sldTarifaDiaCRUD.setValue(100000);
        sldTarifaDiaCRUD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldTarifaDiaCRUDStateChanged(evt);
            }
        });

        sldTarifaKmCRUD.setMajorTickSpacing(500);
        sldTarifaKmCRUD.setMaximum(3000);
        sldTarifaKmCRUD.setMinimum(1000);
        sldTarifaKmCRUD.setPaintTicks(true);
        sldTarifaKmCRUD.setValue(2000);
        sldTarifaKmCRUD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldTarifaKmCRUDStateChanged(evt);
            }
        });

        jLabel36.setText("Tarifas:");

        jLabelTarifaKm.setText("$2000 COP/km");

        jLabel37.setText("* Día:");

        jLabel38.setText("* Km:");

        btnEditarVehiculo.setText("EDITAR");
        btnEditarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVehiculoActionPerformed(evt);
            }
        });

        btnGuardarVehiculo.setText("GUARDAR");
        btnGuardarVehiculo.setEnabled(false);
        btnGuardarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarVehiculoActionPerformed(evt);
            }
        });

        btnLimpiarVehiculoCRUD.setText("LIMPIAR");
        btnLimpiarVehiculoCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarVehiculoCRUDActionPerformed(evt);
            }
        });

        btnEliminarVehiculo.setText("ELIMINAR");
        btnEliminarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarVehiculoActionPerformed(evt);
            }
        });

        jLabelTarifaDia.setText("$100000 COP/día ");

        javax.swing.GroupLayout jpDatosVehiculoLayout = new javax.swing.GroupLayout(jpDatosVehiculo);
        jpDatosVehiculo.setLayout(jpDatosVehiculoLayout);
        jpDatosVehiculoLayout.setHorizontalGroup(
            jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                            .addComponent(jLabel40)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                            .addComponent(txtKilometrajeCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                    .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel34)
                                        .addComponent(jLabel49)
                                        .addComponent(jLabel35))
                                    .addGap(18, 18, 18))
                                .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                    .addComponent(jLabel39)
                                    .addGap(18, 18, 18)))
                            .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(combobxMarcaCRUD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMatriculaCRUD)
                                    .addComponent(combobxVehiculoCRUD, 0, 143, Short.MAX_VALUE))
                                .addComponent(jycVehiculoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(29, 29, 29)
                        .addComponent(sldCapacidadCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCapacidad))
                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxExtrasCRUD)
                                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                        .addComponent(cbxCascoCRUD)
                                        .addGap(48, 48, 48)
                                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnGuardarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnEditarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnLimpiarVehiculoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnEliminarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel38))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sldTarifaKmCRUD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(sldTarifaDiaCRUD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabelTarifaKm)
                                    .addComponent(jLabelTarifaDia))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDatosVehiculoLayout.setVerticalGroup(
            jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sldTarifaDiaCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37)
                            .addComponent(jLabelTarifaDia, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sldTarifaKmCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel38))
                            .addComponent(jLabelTarifaKm, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                .addComponent(cbxExtrasCRUD)
                                .addGap(18, 18, 18)
                                .addComponent(cbxCascoCRUD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelCapacidad))
                            .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                                .addGap(0, 38, Short.MAX_VALUE)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnGuardarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLimpiarVehiculoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnEditarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jpDatosVehiculoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(combobxVehiculoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(txtMatriculaCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(combobxMarcaCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jycVehiculoCRUD, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKilometrajeCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40))
                        .addGap(18, 18, 18)
                        .addGroup(jpDatosVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sldCapacidadCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jfrmVehiculosCRUDLayout = new javax.swing.GroupLayout(jfrmVehiculosCRUD.getContentPane());
        jfrmVehiculosCRUD.getContentPane().setLayout(jfrmVehiculosCRUDLayout);
        jfrmVehiculosCRUDLayout.setHorizontalGroup(
            jfrmVehiculosCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmVehiculosCRUDLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jfrmVehiculosCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtpTablasVehiculos)
                    .addComponent(jpDatosVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jfrmVehiculosCRUDLayout.setVerticalGroup(
            jfrmVehiculosCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmVehiculosCRUDLayout.createSequentialGroup()
                .addComponent(jtpTablasVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDatosVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        desktopPane.add(jfrmVehiculosCRUD);
        jfrmVehiculosCRUD.setBounds(110, 0, 680, 560);

        jfrmAlquilarVehiculo.setClosable(true);
        jfrmAlquilarVehiculo.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmAlquilarVehiculo.setIconifiable(true);
        jfrmAlquilarVehiculo.setTitle("Alquilar Vehiculo");
        jfrmAlquilarVehiculo.setVisible(false);

        jpDatosAlquilar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel28.setText("* Cliente:");

        txtClienteAlquilar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClienteAlquilarKeyReleased(evt);
            }
        });

        jLabel27.setText("* Fechas:");

        jLabel25.setText("* Matricula:");

        txtMatriculaAlquilar.setEditable(false);
        txtMatriculaAlquilar.setEnabled(false);

        jLabel26.setText("* Tarifa:");

        btngTarifaAlquilar.add(rbtnTarifaDiaAlquilar);
        rbtnTarifaDiaAlquilar.setSelected(true);
        rbtnTarifaDiaAlquilar.setText("Día");

        btngTarifaAlquilar.add(rbtnTarifaKmAlquilar);
        rbtnTarifaKmAlquilar.setText("Km");

        btnAceptarAlquilar.setText("ACEPTAR");
        btnAceptarAlquilar.setEnabled(false);
        btnAceptarAlquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarAlquilarActionPerformed(evt);
            }
        });

        btnCancelarAlquilar.setText("CANCELAR");
        btnCancelarAlquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAlquilarActionPerformed(evt);
            }
        });

        jdcInicialAlquilar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcInicialAlquilarPropertyChange(evt);
            }
        });

        jdcFinalAlquilar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFinalAlquilarPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jpDatosAlquilarLayout = new javax.swing.GroupLayout(jpDatosAlquilar);
        jpDatosAlquilar.setLayout(jpDatosAlquilarLayout);
        jpDatosAlquilarLayout.setHorizontalGroup(
            jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosAlquilarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosAlquilarLayout.createSequentialGroup()
                        .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpDatosAlquilarLayout.createSequentialGroup()
                                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28))
                                .addGap(23, 23, 23)
                                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jdcFinalAlquilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtClienteAlquilar, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(jdcInicialAlquilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpDatosAlquilarLayout.createSequentialGroup()
                        .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpDatosAlquilarLayout.createSequentialGroup()
                                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnTarifaDiaAlquilar)
                                    .addComponent(rbtnTarifaKmAlquilar))
                                .addGap(150, 150, 150))
                            .addComponent(txtMatriculaAlquilar))))
                .addContainerGap())
            .addGroup(jpDatosAlquilarLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btnAceptarAlquilar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarAlquilar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDatosAlquilarLayout.setVerticalGroup(
            jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosAlquilarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtMatriculaAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(rbtnTarifaDiaAlquilar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnTarifaKmAlquilar)
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtClienteAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jdcInicialAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jdcFinalAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(jpDatosAlquilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptarAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tblUsuarioAlquilar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "userID", "Nombre", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Byte.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarioAlquilar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblUsuarioAlquilar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tblUsuarioAlquilarMouseDragged(evt);
            }
        });
        tblUsuarioAlquilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuarioAlquilarMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblUsuarioAlquilar);
        if (tblUsuarioAlquilar.getColumnModel().getColumnCount() > 0) {
            tblUsuarioAlquilar.getColumnModel().getColumn(0).setResizable(false);
            tblUsuarioAlquilar.getColumnModel().getColumn(1).setResizable(false);
            tblUsuarioAlquilar.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblUsuarioAlquilar.getColumnModel().getColumn(2).setResizable(false);
            tblUsuarioAlquilar.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        atxtDatosAlquilar.setEditable(false);
        atxtDatosAlquilar.setColumns(20);
        atxtDatosAlquilar.setRows(5);
        atxtDatosAlquilar.setText("Datos del vehiculo:");
        atxtDatosAlquilar.setToolTipText("Datos del vehiculo");
        atxtDatosAlquilar.setEnabled(false);
        jScrollPane11.setViewportView(atxtDatosAlquilar);

        javax.swing.GroupLayout jpDatosMostrarLayout = new javax.swing.GroupLayout(jpDatosMostrar);
        jpDatosMostrar.setLayout(jpDatosMostrarLayout);
        jpDatosMostrarLayout.setHorizontalGroup(
            jpDatosMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosMostrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpDatosMostrarLayout.setVerticalGroup(
            jpDatosMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosMostrarLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jfrmAlquilarVehiculoLayout = new javax.swing.GroupLayout(jfrmAlquilarVehiculo.getContentPane());
        jfrmAlquilarVehiculo.getContentPane().setLayout(jfrmAlquilarVehiculoLayout);
        jfrmAlquilarVehiculoLayout.setHorizontalGroup(
            jfrmAlquilarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmAlquilarVehiculoLayout.createSequentialGroup()
                .addComponent(jpDatosAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDatosMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jfrmAlquilarVehiculoLayout.setVerticalGroup(
            jfrmAlquilarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmAlquilarVehiculoLayout.createSequentialGroup()
                .addGroup(jfrmAlquilarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpDatosMostrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDatosAlquilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        desktopPane.add(jfrmAlquilarVehiculo);
        jfrmAlquilarVehiculo.setBounds(80, 20, 630, 450);

        jfrmValidarVehiculo.setClosable(true);
        jfrmValidarVehiculo.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmValidarVehiculo.setIconifiable(true);
        jfrmValidarVehiculo.setTitle("Validar Vehículo");
        jfrmValidarVehiculo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jfrmValidarVehiculo.setVisible(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Para validar las condiciones de entrega del vehículo:");

        jLabel16.setText("* Matrícula:");

        txtMatriculaValidar.setEditable(false);
        txtMatriculaValidar.setEnabled(false);

        jLabel17.setText("* Estado del Vehículo:");

        combobxEstadoValidar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Excelente", "Bueno", "Regular", "Malo" }));
        combobxEstadoValidar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxEstadoValidarItemStateChanged(evt);
            }
        });
        combobxEstadoValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobxEstadoValidarActionPerformed(evt);
            }
        });

        jLabel18.setText("* Kilometraje:");

        txtKilometrajevalidar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKilometrajesKeyTyped(evt);
            }
        });

        checkbvLimpieza.setText("Limpieza");

        checkbxGasolina.setText("Gasolina");

        checkbxEspejos.setText("Espejos");

        jLabel19.setText("Observaciones:");

        atxtObservaciones.setColumns(15);
        atxtObservaciones.setLineWrap(true);
        atxtObservaciones.setRows(5);
        atxtObservaciones.setWrapStyleWord(true);
        jScrollPane3.setViewportView(atxtObservaciones);

        btnAceptarValidacion.setText("ACEPTAR");
        btnAceptarValidacion.setEnabled(false);
        btnAceptarValidacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarValidacionActionPerformed(evt);
            }
        });

        btnCancelarValidacion.setText("CANCELAR");
        btnCancelarValidacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarValidacionActionPerformed(evt);
            }
        });

        atxtDatosValidar.setEditable(false);
        atxtDatosValidar.setColumns(20);
        atxtDatosValidar.setLineWrap(true);
        atxtDatosValidar.setRows(3);
        atxtDatosValidar.setText("Vehiculo no válido o no está alquilado.");
        atxtDatosValidar.setToolTipText("Datos del vehiculo");
        atxtDatosValidar.setWrapStyleWord(true);
        atxtDatosValidar.setEnabled(false);
        jScrollPane12.setViewportView(atxtDatosValidar);

        txtClienteValidar.setEnabled(false);

        jLabel32.setText("* Cliente:");

        javax.swing.GroupLayout jfrmValidarVehiculoLayout = new javax.swing.GroupLayout(jfrmValidarVehiculo.getContentPane());
        jfrmValidarVehiculo.getContentPane().setLayout(jfrmValidarVehiculoLayout);
        jfrmValidarVehiculoLayout.setHorizontalGroup(
            jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAceptarValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelarValidacion))
                        .addGap(48, 48, 48))
                    .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtKilometrajevalidar))
                                .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(combobxEstadoValidar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                                    .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel32))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtClienteValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMatriculaValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                                .addComponent(checkbxGasolina)
                                .addGap(18, 18, 18)
                                .addComponent(checkbvLimpieza)
                                .addGap(18, 18, 18)
                                .addComponent(checkbxEspejos))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
            .addComponent(jSeparator5)
        );
        jfrmValidarVehiculoLayout.setVerticalGroup(
            jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmValidarVehiculoLayout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(jfrmValidarVehiculoLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(29, 29, 29)
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtMatriculaValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtClienteValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combobxEstadoValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkbvLimpieza)
                    .addComponent(checkbxEspejos)
                    .addComponent(checkbxGasolina)
                    .addComponent(jLabel18)
                    .addComponent(txtKilometrajevalidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfrmValidarVehiculoLayout.createSequentialGroup()
                        .addGroup(jfrmValidarVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAceptarValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGap(28, 28, 28))
        );

        desktopPane.add(jfrmValidarVehiculo);
        jfrmValidarVehiculo.setBounds(20, 20, 620, 410);

        jfrmReportes.setClosable(true);
        jfrmReportes.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmReportes.setIconifiable(true);
        jfrmReportes.setTitle("Reportes");
        jfrmReportes.setVisible(false);

        jpDatosPromedio.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Tabla", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tblReportePromedio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fecha", "Auto", "Moto", "Furgoneta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReportePromedio.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(tblReportePromedio);
        if (tblReportePromedio.getColumnModel().getColumnCount() > 0) {
            tblReportePromedio.getColumnModel().getColumn(0).setResizable(false);
            tblReportePromedio.getColumnModel().getColumn(1).setResizable(false);
            tblReportePromedio.getColumnModel().getColumn(2).setResizable(false);
            tblReportePromedio.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel13.setText("Fechas:");

        jdcFechaInicialReporte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFechaInicialReportePropertyChange(evt);
            }
        });

        jdcFechaFinalReporte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFechaFinalReportePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jpDatosPromedioLayout = new javax.swing.GroupLayout(jpDatosPromedio);
        jpDatosPromedio.setLayout(jpDatosPromedioLayout);
        jpDatosPromedioLayout.setHorizontalGroup(
            jpDatosPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosPromedioLayout.createSequentialGroup()
                .addGroup(jpDatosPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jpDatosPromedioLayout.createSequentialGroup()
                        .addGroup(jpDatosPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDatosPromedioLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jdcFechaFinalReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpDatosPromedioLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(jdcFechaInicialReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 89, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpDatosPromedioLayout.setVerticalGroup(
            jpDatosPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosPromedioLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpDatosPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jdcFechaInicialReporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jdcFechaFinalReporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpGraficaPromedioLayout = new javax.swing.GroupLayout(jpGraficaPromedio);
        jpGraficaPromedio.setLayout(jpGraficaPromedioLayout);
        jpGraficaPromedioLayout.setHorizontalGroup(
            jpGraficaPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpGraficaPromedioLayout.setVerticalGroup(
            jpGraficaPromedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        txtPromedioAutos.setEditable(false);
        txtPromedioAutos.setEnabled(false);

        txtPromedioMotos.setEditable(false);
        txtPromedioMotos.setEnabled(false);

        txtPromedioFurgonetas.setEditable(false);
        txtPromedioFurgonetas.setEnabled(false);

        javax.swing.GroupLayout jpPromediosLayout = new javax.swing.GroupLayout(jpPromedios);
        jpPromedios.setLayout(jpPromediosLayout);
        jpPromediosLayout.setHorizontalGroup(
            jpPromediosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPromediosLayout.createSequentialGroup()
                .addComponent(jpDatosPromedio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPromediosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpPromediosLayout.createSequentialGroup()
                        .addComponent(txtPromedioAutos, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(txtPromedioMotos, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txtPromedioFurgonetas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpGraficaPromedio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpPromediosLayout.setVerticalGroup(
            jpPromediosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPromediosLayout.createSequentialGroup()
                .addComponent(jpDatosPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(jpPromediosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPromediosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPromedioAutos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPromedioMotos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPromedioFurgonetas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jpGraficaPromedio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Promedios", jpPromedios);

        javax.swing.GroupLayout jpDisponiblesLayout = new javax.swing.GroupLayout(jpDisponibles);
        jpDisponibles.setLayout(jpDisponiblesLayout);
        jpDisponiblesLayout.setHorizontalGroup(
            jpDisponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );
        jpDisponiblesLayout.setVerticalGroup(
            jpDisponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Disponibilidad", jpDisponibles);

        javax.swing.GroupLayout jfrmReportesLayout = new javax.swing.GroupLayout(jfrmReportes.getContentPane());
        jfrmReportes.getContentPane().setLayout(jfrmReportesLayout);
        jfrmReportesLayout.setHorizontalGroup(
            jfrmReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jfrmReportesLayout.setVerticalGroup(
            jfrmReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        desktopPane.add(jfrmReportes);
        jfrmReportes.setBounds(90, 30, 680, 460);

        jfrmClientes.setClosable(true);
        jfrmClientes.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jfrmClientes.setIconifiable(true);
        jfrmClientes.setTitle("Clientes");
        jfrmClientes.setVisible(false);

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cliente", "Vehiculo", "Fecha Inicial", "Fecha Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblClientes.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tblClientesMouseDragged(evt);
            }
        });
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        tblClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblClientesKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(0).setResizable(false);
            tblClientes.getColumnModel().getColumn(1).setResizable(false);
            tblClientes.getColumnModel().getColumn(2).setResizable(false);
            tblClientes.getColumnModel().getColumn(3).setResizable(false);
        }

        jpDatosCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtros", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        combobxTipoCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Auto", "Moto", "Furgoneta" }));
        combobxTipoCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobxTipoClienteItemStateChanged(evt);
            }
        });

        checkbxClientesHoy.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        checkbxClientesHoy.setText("HOY");
        checkbxClientesHoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbxClientesHoyActionPerformed(evt);
            }
        });

        jLabel14.setText("Tipo:");

        btnAlquilarCliente.setText("ALQUILAR");
        btnAlquilarCliente.setEnabled(false);
        btnAlquilarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlquilarClienteActionPerformed(evt);
            }
        });

        btnValidarCliente.setText("VALIDAR");
        btnValidarCliente.setEnabled(false);
        btnValidarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarClienteActionPerformed(evt);
            }
        });

        btnLimpiarCliente.setText("LIMPIAR");
        btnLimpiarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarClienteActionPerformed(evt);
            }
        });

        txtMatriculaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteMatriculaKeyTyped(evt);
                txtMatriculasKeyTyped(evt);
            }
        });

        txtCliente.setEnabled(false);
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreosKeyTyped(evt);
            }
        });

        jLabel23.setText("Matricula:");

        jLabel31.setText("Cliente:");

        javax.swing.GroupLayout jpDatosClienteLayout = new javax.swing.GroupLayout(jpDatosCliente);
        jpDatosCliente.setLayout(jpDatosClienteLayout);
        jpDatosClienteLayout.setHorizontalGroup(
            jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosClienteLayout.createSequentialGroup()
                .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDatosClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel14)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkbxClientesHoy)
                            .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCliente)
                                .addComponent(combobxTipoCliente, 0, 155, Short.MAX_VALUE)
                                .addComponent(txtMatriculaCliente))))
                    .addGroup(jpDatosClienteLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnAlquilarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnValidarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpDatosClienteLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnLimpiarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDatosClienteLayout.setVerticalGroup(
            jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosClienteLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobxTipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatriculaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(18, 18, 18)
                .addComponent(checkbxClientesHoy)
                .addGap(18, 18, 18)
                .addGroup(jpDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnValidarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnAlquilarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnLimpiarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpTablaClientesLayout = new javax.swing.GroupLayout(jpTablaClientes);
        jpTablaClientes.setLayout(jpTablaClientesLayout);
        jpTablaClientesLayout.setHorizontalGroup(
            jpTablaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTablaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpDatosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpTablaClientesLayout.setVerticalGroup(
            jpTablaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTablaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTablaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jpDatosCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jfrmClientesLayout = new javax.swing.GroupLayout(jfrmClientes.getContentPane());
        jfrmClientes.getContentPane().setLayout(jfrmClientesLayout);
        jfrmClientesLayout.setHorizontalGroup(
            jfrmClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmClientesLayout.createSequentialGroup()
                .addComponent(jpTablaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jfrmClientesLayout.setVerticalGroup(
            jfrmClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfrmClientesLayout.createSequentialGroup()
                .addComponent(jpTablaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        desktopPane.add(jfrmClientes);
        jfrmClientes.setBounds(110, 30, 660, 470);

        mnuGeneral.setMnemonic('f');
        mnuGeneral.setText("General");
        mnuGeneral.setEnabled(false);

        mnuCerrarSesion.setMnemonic('x');
        mnuCerrarSesion.setText("Cerrar Sesión");
        mnuCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCerrarSesionActionPerformed(evt);
            }
        });
        mnuGeneral.add(mnuCerrarSesion);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuSalir.setMnemonic('a');
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuGeneral.add(mnuSalir);

        menuBar.add(mnuGeneral);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCerrarSesionActionPerformed
        mnuGeneral.setEnabled(false);
        // Resetear variables:
        txtUsuario.setText("");
        txtPassword.setText("");

        // Esconder todas las ventanas posibles:
        jfrmPrincipalAdmin.hide();
        jfrmValidarVehiculo.hide();
        jfrmAlquilarVehiculo.hide();
        jfrmUsuariosCRUD.hide();
        jfrmVehiculosCRUD.hide();
        jfrmReportes.hide();
        jfrmClientes.hide();

        jfrmPrincipalUsuario.hide();
        jfrmLogin.show();
        banderaMarcas = false;
        banderaAlquilar = false;
    }//GEN-LAST:event_mnuCerrarSesionActionPerformed

// -------------------- REGISTRAR NUEVO USUARIO --------------------------------
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // Al dar en el botón de Registrar en el LogIn:
        jfrmRegistrarUsuario.show();
        btnAceptarRegistro.setEnabled(false);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // Obteniendo datos ingresados:
        String correo = txtUsuario.getText();
        String password = new String(txtPassword.getPassword());

        try {
            Usuario usuarioAutenticado = controlUsuario.validarUsuario(correo, password);

            // Si sigue el programa, significa que encontró y validó el usuario:
            JOptionPane.showMessageDialog(this, "Bienvenido, " + usuarioAutenticado,
                    usuarioAutenticado.getTipousuario().getDescripcion(), 1);
            mnuGeneral.setEnabled(true);
            // Ocultar posibles ventanas:
            jfrmRegistrarUsuario.hide();
            jfrmLogin.hide();

            bandera = true;
            controlVehiculo = new ControladorVehiculo();
            alquilar = new AlquilarVehiculo();
            alquilar.actualizarEstadoVehiculos();
            // Dependiendo del tipo de usuario, muestra las X ventanas:
            byte tipo = usuarioAutenticado.getTipousuario().getCodigo();
            switch (tipo) {
                case 1:
                    // ADMINISTRADOR:
                    pdfs = new CrearPDF();

                    jfrmPrincipalAdmin.show();
                    llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
                    break;
                case 2:
                    // USUARIO REGULAR:
                    jfrmPrincipalUsuario.show();
                    llenarTablaPrincipal("Usuario", tblVehiculosUsuario);

                    jdcInicialUsuario.setDate(fechaActual);
                    jdcInicialUsuario.setMinSelectableDate(fechaActual);
                    jdcFinalUsuario.setMinSelectableDate(fechaActual);
                    break;
            }

        } catch (UsuarioException ex) {
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(), "Error en LogIn", 0);
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuEditarVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditarVehiculosActionPerformed
        jfrmVehiculosCRUD.show();
        llenarVehiculosCRUD();
    }//GEN-LAST:event_mnuEditarVehiculosActionPerformed

    private void btnCancelarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarRegistroActionPerformed
        jfrmRegistrarUsuario.hide();
        limpiarCampos("Registro");
    }//GEN-LAST:event_btnCancelarRegistroActionPerformed

    private void btnAceptarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarRegistroActionPerformed
        // Obteniendo los datos ingresados:
        String nuevaPassword = new String(txtNuevaPassword.getPassword());
        String repPassword = new String(txtConfirmarPassword.getPassword());
        TipoUsuario tipo = controlUsuario.getTipousuarios()[1];

        Usuario usuarioNuevo = new Usuario(txtNuevoCorreo.getText(), nuevaPassword,
                tipo, txtNuevoNombre.getText(), txtNuevoApellido.getText(),
                Byte.parseByte(spnNuevaEdad.getValue().toString()),
                cbxVisionRegistro.isSelected(), cbxAuditivoRegistro.isSelected());
        try {
            if (nuevaPassword.compareTo(repPassword) == 0) {
                // Usuario diligenció contraseña bien, 

                controlUsuario.agregarUsuario(usuarioNuevo);
                limpiarCampos("Registro");
                jfrmRegistrarUsuario.hide();
                JOptionPane.showMessageDialog(this,
                        "Usuario Registrado", "¡Registro exitoso!", 1);
            } else {
                throw new UsuarioException("Contraseñas ingresadas no coinciden");
            }

        } catch (UsuarioException ex) {
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(), "Error en Registro", 0);
        }
    }//GEN-LAST:event_btnAceptarRegistroActionPerformed

    private void txtCamposRegistroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCamposRegistroKeyTyped
        habilitarBotones("Registro");
    }//GEN-LAST:event_txtCamposRegistroKeyTyped

    private void cbxTerminosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTerminosActionPerformed
        habilitarBotones("Registro");
    }//GEN-LAST:event_cbxTerminosActionPerformed

// --------------------------- CRUD USUARIO -----------------------------------
    private void mnuEditarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditarUsuariosActionPerformed
        jfrmUsuariosCRUD.show();
        llenarUsuariosCRUD();
        habilitarBotones("Usuario CRUD");
    }//GEN-LAST:event_mnuEditarUsuariosActionPerformed

    private void btnGuardarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarUsuarioActionPerformed
        // Obteniendo los datos ingresados:
        String correo = txtCorreoUsuario.getText();
        String password = new String(txtPasswordUsuario.getPassword());
        byte index = (byte) combobxTipoUsuario.getSelectedIndex();
        TipoUsuario tipo = controlUsuario.getTipousuarios()[index - 1];

        if (!editarUsuario) {
            // Primero, va instanciar nuevo Usuario e intentar guardarlo:
            Usuario usuarioNuevo = new Usuario(correo, password, tipo,
                    txtNombreUsuario.getText(), txtApellidoUsuario.getText(),
                    Byte.parseByte(spnEdadUsuario.getValue().toString()),
                    cbxVisionCRUD.isSelected(), cbxAuditivoCRUD.isSelected());
            try {
                controlUsuario.agregarUsuario(usuarioNuevo);
                JOptionPane.showMessageDialog(this,
                        "Usuario Registrado", "¡Registro exitoso!", 1);

                resetearUsuarioCRUD();
            } catch (UsuarioException ex) {
                if (ex.getMessage().compareTo("Usuario ingresado ya existe") == 0) {
                    int opc = JOptionPane.showConfirmDialog(this, "¿Desea revisar el "
                            + "usuario en cuestión?", "Usuario existente",
                            JOptionPane.YES_NO_OPTION);
                    if (opc == 0) {
                        // El Administrador ingresó SI:
                        obtenerUsuarioExistente(correo);
                        editarUsuario = true;
                    } else {
                        resetearUsuarioCRUD();
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            ex.getMessage(), "Error en Registro", 0);
                }
            }
        } else {
            // El Usuario ya existe y se pueden modificar valores:
            Object[] valores = {correo, password, txtNombreUsuario.getText(),
                txtApellidoUsuario.getText(),
                Byte.parseByte(spnEdadUsuario.getValue().toString()),
                cbxVisionCRUD.isSelected(), cbxAuditivoCRUD.isSelected()};

            controlUsuario.editarUsuario(valores);
            JOptionPane.showMessageDialog(this,
                    "Usuario Editado", "¡Modifiación exitosa!", 1);
            // Vuelvo a habilitar los campos correspondientes:
            combobxTipoUsuario.setEnabled(true);
            txtCorreoUsuario.setEnabled(true);

            btnEditarUsuario.setEnabled(false);
            resetearUsuarioCRUD();
        }
    }//GEN-LAST:event_btnGuardarUsuarioActionPerformed

    private void resetearUsuarioCRUD() {
        // Para observar los cambios en tabla y reseteo de CRUD:
        llenarUsuariosCRUD();
        limpiarCampos("Usuario CRUD");
        btnGuardarUsuario.setEnabled(false);
        btnGuardarUsuario.setSelected(false);
    }

    private void txtCamposUsuarioCRUDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCamposUsuarioCRUDKeyTyped
        habilitarBotones("Usuario CRUD");
    }//GEN-LAST:event_txtCamposUsuarioCRUDKeyTyped

    private void combobxTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobxTipoUsuarioActionPerformed
        habilitarBotones("Usuario CRUD");
    }//GEN-LAST:event_combobxTipoUsuarioActionPerformed

    private void btnEditarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarUsuarioActionPerformed
        // Para obtener valores del usuario en los textos del CRUD:
        int seleccionado = tblUsuarioCRUD.getSelectedRow();
        if (seleccionado == -1) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un usuario", "Error en CRUD", 0);
        } else {
            // Obtener el usuario por medio del userID:
            String userID = (String) tblUsuarioCRUD.getValueAt(seleccionado, 0);
            obtenerUsuarioExistente(userID);
            editarUsuario = true;
        }
        btnEditarUsuario.setSelected(false);
    }//GEN-LAST:event_btnEditarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        // Para eliminar un usuario de la lista,
        int seleccionado = tblUsuarioCRUD.getSelectedRow();
        if (seleccionado == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un usuario",
                    "Error en CRUD", 0);
        } else {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de borrar este usuario?",
                    "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);

            if (opcion == 0) {
                // Usuario confirma eliminar el usuario,
                String userID = (String) tblUsuarioCRUD.getValueAt(seleccionado, 0);
                boolean confirmo = controlUsuario.eliminarUsuario(userID);
                if (confirmo) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado con éxito");
                }
                llenarUsuariosCRUD();
            }
        }
        btnEliminarUsuario.setSelected(false);
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

// ------------------------- CRUD VEHICULO -------------------------------------
    private void btnGuardarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarVehiculoActionPerformed
        // Obteniendo los datos ingresados,
        String tipo = combobxVehiculoCRUD.getSelectedItem().toString();
        String matricula = txtMatriculaCRUD.getText();

        String marca = combobxMarcaCRUD.getSelectedItem().toString();
        int index = controlVehiculo.getMarcas().indexOf(new TipoMarca(tipo, marca));

        String anio = Integer.toString(jycVehiculoCRUD.getValue());
        int kilometraje = Integer.parseInt(txtKilometrajeCRUD.getText());
        int[] valorAlquiler = {sldTarifaDiaCRUD.getValue(), sldTarifaKmCRUD.getValue()};

        // adicional, String matricula, int kilometraje, boolean estado, 
        // TipoMarca marca, String año, int [] valorAlquiler, 
        // int contAlquiler, boolean activado
        if (!editarVehiculo) {
            // Primero, va a instanciar nuevo vehiculo e intentar guardarlo:
            try {
                switch (tipo) {
                    case "Auto": {
                        Auto vehiculo = new Auto(cbxExtrasCRUD.isSelected(),
                                matricula, kilometraje, true,
                                controlVehiculo.getMarcas().get(index),
                                anio, valorAlquiler, 0, true);

                        controlVehiculo.agregarVehiculo((AbstractVehiculo) vehiculo);
                        break;
                    }
                    case "Moto": {
                        Moto vehiculo = new Moto(cbxCascoCRUD.isSelected(),
                                matricula, kilometraje, true,
                                controlVehiculo.getMarcas().get(index),
                                anio, valorAlquiler, 0, true);

                        controlVehiculo.agregarVehiculo((AbstractVehiculo) vehiculo);
                        break;
                    }
                    case "Furgoneta": {
                        short capacidad = (short) sldCapacidadCRUD.getValue();
                        Furgoneta vehiculo = new Furgoneta(capacidad, matricula,
                                kilometraje, true, controlVehiculo.getMarcas().get(index),
                                anio, valorAlquiler, 0, true);

                        controlVehiculo.agregarVehiculo((AbstractVehiculo) vehiculo);
                        break;
                    }
                }
                JOptionPane.showMessageDialog(this,
                        "Vehiculo Registrado", "¡Registro exitoso!", 1);
                resetearVehiculoCRUD();

            } catch (VehiculoException ex) {
                if (ex.getMessage().compareTo("Vehiculo ingresado ya existe") == 0) {
                    int opc = JOptionPane.showConfirmDialog(this, "¿Desea revisar el "
                            + "vehiculo en cuestión?", "Vehiculo existente",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (opc == 0) {
                        // El Administrador ingresó SI:
                        obtenerVehiculoExistente(matricula);
                        editarVehiculo = true;
                    } else {
                        resetearVehiculoCRUD();
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            ex.getMessage(), "Error en Registro", 0);
                }
            }
        } else {
            // El vehiculo ya existe y se pueden modificar los valores:
            Object[] valores = {tipo, matricula, kilometraje, marca, anio,
                valorAlquiler[0], valorAlquiler[1], ""};
            switch (tipo) {
                case "Auto":
                    valores[7] = cbxExtrasCRUD.isSelected();
                    break;
                case "Moto":
                    valores[7] = cbxCascoCRUD.isSelected();
                    break;
                case "Furgoneta":
                    valores[7] = (short) sldCapacidadCRUD.getValue();
                    break;
            }
            controlVehiculo.editarVehiculo(valores);
            JOptionPane.showMessageDialog(this,
                    "Vehiculo Editado", "¡Modifiación exitosa!", 1);
            // Vuelvo a habilitar los campos correspondientes:
            combobxVehiculoCRUD.setEnabled(true);
            txtMatriculaCRUD.setEnabled(true);

            btnEditarUsuario.setEnabled(false);
            resetearVehiculoCRUD();
        }
    }//GEN-LAST:event_btnGuardarVehiculoActionPerformed

    private void resetearVehiculoCRUD() {
        // Para observar los cambios en tabla y reseteo de CRUD:       
        llenarVehiculosCRUD();
        limpiarCampos("Vehiculo CRUD");
        btnGuardarVehiculo.setEnabled(false);
        btnGuardarVehiculo.setSelected(false);
        llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
    }

    private void sldTarifaDiaCRUDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldTarifaDiaCRUDStateChanged
        jLabelTarifaDia.setText("$" + sldTarifaDiaCRUD.getValue() + " COP/día");
    }//GEN-LAST:event_sldTarifaDiaCRUDStateChanged

    private void sldTarifaKmCRUDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldTarifaKmCRUDStateChanged
        jLabelTarifaKm.setText("$" + sldTarifaKmCRUD.getValue() + " COP/km");
    }//GEN-LAST:event_sldTarifaKmCRUDStateChanged

    private void sldCapacidadCRUDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldCapacidadCRUDStateChanged
        jLabelCapacidad.setText(sldCapacidadCRUD.getValue() + " kg");
    }//GEN-LAST:event_sldCapacidadCRUDStateChanged

    private void combobxVehiculoCRUDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxVehiculoCRUDItemStateChanged
        // Activar las marcas del vehiculo:
        combobxMarcaCRUD.setEnabled(true);
        llenarCombobxMarcas(combobxMarcaCRUD, combobxVehiculoCRUD);

        // Activar/Desactivar botones del CRUD vehículos, dependiendo del tipo: 
        switch ((String) combobxVehiculoCRUD.getSelectedItem()) {
            case "Auto":
                // Activar solo Extras,
                activarCamposCRUD(true, false, false);
                break;
            case "Moto":
                // Activar solo Casco,
                activarCamposCRUD(false, true, false);
                break;
            case "Furgoneta":
                // Activar solo Capacidad,
                activarCamposCRUD(false, false, true);
                break;
            default:
                // En caso de estar en "Seleccionar":
                activarCamposCRUD(false, false, false);
                combobxMarcaCRUD.setEnabled(false);
                combobxMarcaCRUD.setSelectedIndex(0);
        }
    }//GEN-LAST:event_combobxVehiculoCRUDItemStateChanged

    private void activarCamposCRUD(boolean extras, boolean casco, boolean capacidad) {
        cbxExtrasCRUD.setEnabled(extras);
        cbxCascoCRUD.setEnabled(casco);
        jLabel48.setEnabled(capacidad);
        sldCapacidadCRUD.setEnabled(capacidad);
        jLabelCapacidad.setEnabled(capacidad);
    }

    private void combobxMarcaCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobxMarcaCRUDActionPerformed
        habilitarBotones("Vehiculo CRUD");
    }//GEN-LAST:event_combobxMarcaCRUDActionPerformed

    private void btnEditarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVehiculoActionPerformed
        try {
            JTable table = obtenerTablaSeleccionada();
            int seleccionado = table.getSelectedRow();
            if (seleccionado == -1) {
                throw new VehiculoException("Debe seleccionar un vehiculo");
            } else {
                // Para obtener valores del vehiculo en los textos del CRUD:
                String matricula = (String) table.getValueAt(seleccionado, 0);
                obtenerVehiculoExistente(matricula);
                editarVehiculo = true;
            }
        } catch (VehiculoException ex) {
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(), "Error en CRUD", 0);
        } finally {
            btnEditarVehiculo.setSelected(false);
        }
    }//GEN-LAST:event_btnEditarVehiculoActionPerformed

    private void btnEliminarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarVehiculoActionPerformed
        try {
            JTable table = obtenerTablaSeleccionada();
            int seleccionado = table.getSelectedRow();
            if (seleccionado == -1) {
                throw new VehiculoException("Debe seleccionar un vehiculo");
            } else {
                int opcion = JOptionPane.showConfirmDialog(this,
                        "¿Está seguro de borrar este vehiculo?",
                        "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);
                if (opcion == 0) {
                    // Admin confirma eliminar el vehiculo,
                    String matricula = (String) table.getValueAt(seleccionado, 0);
                    boolean confirmo = controlVehiculo.eliminarVehiculo(matricula);
                    if (confirmo) {
                        JOptionPane.showMessageDialog(this, "Vehiculo seleccionado "
                                + "ha sido eliminado con éxito",
                                "Eliminación exitosa", 1);
                    } else {
                        // No se puede eliminar, ya tiene algún registro:
                        int opc = JOptionPane.showConfirmDialog(this,
                                "El vehiculo no se puede eliminar, ¿Desea en "
                                + "cambio desactivarlo?", "Confirmar desactivar",
                                JOptionPane.YES_NO_OPTION);
                        if (opc == 0) {
                            // Admin confirma desactivar el vehiculo:
                            controlVehiculo.desactivarVehiculo(matricula, false);
                            JOptionPane.showMessageDialog(this, "Vehiculo seleccionado "
                                    + "ha sido \n desactivado con éxito",
                                    "Desactivación exitosa", 1);
                        }
                    }
                    // Actualizar tablas para observar cambios:
                    llenarVehiculosCRUD();
                    llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
                }
            }
        } catch (VehiculoException ex) {
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(), "Error en CRUD", 0);
        } finally {
            btnEliminarVehiculo.setSelected(false);
        }
    }//GEN-LAST:event_btnEliminarVehiculoActionPerformed

    private void btnLimpiarUsuarioCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarUsuarioCRUDActionPerformed
        limpiarCampos("Usuario CRUD");
        habilitarBotones("Usuario CRUD");
        btnLimpiarUsuarioCRUD.setSelected(false);
    }//GEN-LAST:event_btnLimpiarUsuarioCRUDActionPerformed

    private void btnLimpiarVehiculoCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarVehiculoCRUDActionPerformed
        limpiarCampos("Vehiculo CRUD");
        btnLimpiarVehiculoCRUD.setSelected(false);
    }//GEN-LAST:event_btnLimpiarVehiculoCRUDActionPerformed

    private void tblAutoCRUDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblAutoCRUDFocusGained
        tblMotoCRUD.clearSelection();
        tblFurgonetaCRUD.clearSelection();
    }//GEN-LAST:event_tblAutoCRUDFocusGained

    private void tblMotoCRUDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblMotoCRUDFocusGained
        tblAutoCRUD.clearSelection();
        tblFurgonetaCRUD.clearSelection();
    }//GEN-LAST:event_tblMotoCRUDFocusGained

    private void tblFurgonetaCRUDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblFurgonetaCRUDFocusGained
        tblAutoCRUD.clearSelection();
        tblMotoCRUD.clearSelection();
    }//GEN-LAST:event_tblFurgonetaCRUDFocusGained

// ----------------------- ALQUILAR VEHICULO ----------------------------------
    private void btnAlquilarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlquilarAdminActionPerformed
        // Primero, verificar que el vehiculo seleccionado está disponible:
        if (!controlVehiculo.estadoVehiculo(txtMatriculaAdmin.getText())
                && !txtMatriculaAdmin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vehiculo no disponible");
        } else {
            jfrmAlquilarVehiculo.show();
            llenarTablaAlquilar();
            String matricula = txtMatriculaAdmin.getText();
            txtMatriculaAlquilar.setText(matricula);
            atxtDatosAlquilar.setText(controlVehiculo.encontrarVehiculo(matricula)
                    .getArrayDatosAlquilar());

            // Validaciones de fechas:
            jdcInicialAlquilar.setDate(fechaActual);
            jdcInicialAlquilar.setMinSelectableDate(fechaActual);
            jdcFinalAlquilar.setMinSelectableDate(fechaActual);

            banderaAlquilar = true;
        }
    }//GEN-LAST:event_btnAlquilarAdminActionPerformed

    private void tblUsuarioAlquilarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuarioAlquilarMouseDragged
        // Obtener el usuario que el administrador ha seleccionado:
        int index = tblUsuarioAlquilar.getSelectedRow();
        String cliente = (String) tblUsuarioAlquilar.getValueAt(index, 0);
        txtClienteAlquilar.setText(cliente);
        habilitarBotones("Alquilar");
    }//GEN-LAST:event_tblUsuarioAlquilarMouseDragged

    private void tblUsuarioAlquilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuarioAlquilarMouseClicked
        // Obtener el usuario que el administrador ha seleccionado:
        int index = tblUsuarioAlquilar.getSelectedRow();
        String cliente = (String) tblUsuarioAlquilar.getValueAt(index, 0);
        txtClienteAlquilar.setText(cliente);
        habilitarBotones("Alquilar");
    }//GEN-LAST:event_tblUsuarioAlquilarMouseClicked

    private void btnCancelarAlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAlquilarActionPerformed
        limpiarCampos("Alquilar");
        jfrmAlquilarVehiculo.hide();
        limpiarCampos("Administrador");
    }//GEN-LAST:event_btnCancelarAlquilarActionPerformed

    private void btnAceptarAlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarAlquilarActionPerformed
        String matricula = txtMatriculaAlquilar.getText();
        LocalDate fechaInicial = convertir.ConvertirFecha(jdcInicialAlquilar.getDate());
        LocalDate fechaFinal = convertir.ConvertirFecha(jdcFinalAlquilar.getDate());

        if (alquilar.validarEstadoVehiculo(matricula, fechaInicial, fechaFinal)) {
            // Se puede alquilar el vehiculo en esas fechas:
            String userID = txtClienteAlquilar.getText();
            Usuario user = controlUsuario.encontrarUsuarioID(userID);
            String pago = "";
            if (rbtnTarifaDiaAlquilar.isSelected()) {
                pago = "Dia";
            } else if (rbtnTarifaKmAlquilar.isSelected()) {
                pago = "Km";
            }

            alquilar.alquilarVehiculo(controlVehiculo.encontrarVehiculo(matricula),
                    user, fechaInicial, fechaFinal, pago);

            JOptionPane.showMessageDialog(this, "Vehiculo alquilado con éxito");

            // Borrar todos los valores y campos:
            jfrmAlquilarVehiculo.hide();
            limpiarCampos("Alquilar");
            limpiarCampos("Administrador");
            llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
        } else {
            JOptionPane.showMessageDialog(this, "Vehiculo no  se puede alquilar"
                    + " en esas fechas", "Error de sistema", 0);
        }
    }//GEN-LAST:event_btnAceptarAlquilarActionPerformed

    private void txtClienteAlquilarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteAlquilarKeyReleased
        habilitarBotones("Alquilar");
    }//GEN-LAST:event_txtClienteAlquilarKeyReleased

    private void jdcInicialAlquilarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcInicialAlquilarPropertyChange
        habilitarBotones("Alquilar");
        jdcFinalAlquilar.setMinSelectableDate(jdcInicialAlquilar.getDate());
    }//GEN-LAST:event_jdcInicialAlquilarPropertyChange

    private void jdcFinalAlquilarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFinalAlquilarPropertyChange
        habilitarBotones("Alquilar");
    }//GEN-LAST:event_jdcFinalAlquilarPropertyChange

//---------------------------- FILTROS ADMIN ----------------------------------- 
    private void tblVehiculosAdminMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehiculosAdminMouseDragged
        // Obtener el usuario que el administrador ha seleccionado:
        int index = tblVehiculosAdmin.getSelectedRow();
        String matricula = (String) tblVehiculosAdmin.getValueAt(index, 2);
        txtMatriculaAdmin.setText(matricula);

        btnAlquilarAdmin.setEnabled(true);
        btnValidarAdmin.setEnabled(true);
    }//GEN-LAST:event_tblVehiculosAdminMouseDragged

    private void tblVehiculosAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehiculosAdminMouseClicked
        // Obtener el usuario que el administrador ha seleccionado:
        int index = tblVehiculosAdmin.getSelectedRow();
        String matricula = (String) tblVehiculosAdmin.getValueAt(index, 2);
        txtMatriculaAdmin.setText(matricula);

        btnAlquilarAdmin.setEnabled(true);
        btnValidarAdmin.setEnabled(true);
    }//GEN-LAST:event_tblVehiculosAdminMouseClicked

    private void combobxEstadoAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxEstadoAdminItemStateChanged
        llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
        txtMatriculaAdmin.setText("");
    }//GEN-LAST:event_combobxEstadoAdminItemStateChanged

    private void combobxVehiculoAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxVehiculoAdminItemStateChanged
        // Activar las marcas del vehiculo:
        combobxMarcaAdmin.setEnabled(true);
        llenarCombobxMarcas(combobxMarcaAdmin, combobxVehiculoAdmin);

        if (combobxVehiculoAdmin.getSelectedIndex() == 0) {
            combobxMarcaAdmin.setEnabled(false);
            combobxMarcaAdmin.setSelectedIndex(0);
        }

        banderaMarcas = true;
        llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
        txtMatriculaAdmin.setText("");
    }//GEN-LAST:event_combobxVehiculoAdminItemStateChanged

    private void combobxMarcaAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxMarcaAdminItemStateChanged
        llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
        txtMatriculaAdmin.setText("");
    }//GEN-LAST:event_combobxMarcaAdminItemStateChanged

    private void btnLimpiarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarAdminActionPerformed
        limpiarCampos("Administrador");
    }//GEN-LAST:event_btnLimpiarAdminActionPerformed

// -------------------------- FILTROS USUARIO ----------------------------------    
    private void combobxMarcaUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxMarcaUsuarioItemStateChanged
        llenarTablaPrincipal("Usuario", tblVehiculosUsuario);
    }//GEN-LAST:event_combobxMarcaUsuarioItemStateChanged

    private void combobxVehiculoUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxVehiculoUsuarioItemStateChanged
        // Activar las marcas del vehiculo:
        combobxMarcaUsuario.setEnabled(true);
        llenarCombobxMarcas(combobxMarcaUsuario, combobxVehiculoUsuario);

        if (combobxVehiculoUsuario.getSelectedIndex() == 0) {
            combobxMarcaUsuario.setEnabled(false);
            combobxMarcaUsuario.setSelectedIndex(0);
        }

        banderaMarcas = true;
        llenarTablaPrincipal("Usuario", tblVehiculosUsuario);
    }//GEN-LAST:event_combobxVehiculoUsuarioItemStateChanged

    private void jdcInicialUsuarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcInicialUsuarioPropertyChange
        jdcFinalUsuario.setMinSelectableDate(jdcInicialUsuario.getDate());
        habilitarBotones("Usuario");
    }//GEN-LAST:event_jdcInicialUsuarioPropertyChange

    private void jdcFinalUsuarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFinalUsuarioPropertyChange
        habilitarBotones("Usuario");
    }//GEN-LAST:event_jdcFinalUsuarioPropertyChange

    private void cbxDisponibleUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDisponibleUsuarioActionPerformed
        llenarTablaPrincipal("Usuario", tblVehiculosUsuario);
    }//GEN-LAST:event_cbxDisponibleUsuarioActionPerformed

// ------------------------- VALIDAR VEHICULO ----------------------------------
    private void btnValidarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarAdminActionPerformed
        // Primero, verificar que el vehiculo seleccionado está alquilado:
        if (controlVehiculo.estadoVehiculo(txtMatriculaAdmin.getText())
                && !txtMatriculaAdmin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vehiculo no se ha alquilado");
        } else {
            jfrmValidarVehiculo.show();
            String matricula = txtMatriculaAdmin.getText();
            txtMatriculaValidar.setText(matricula);
            txtClienteValidar.setText((String) tblVehiculosAdmin.
                    getValueAt(tblVehiculosAdmin.getSelectedRow(), 5));

            atxtDatosValidar.setText(controlVehiculo.encontrarVehiculo(matricula)
                    .getArrayDatosValidar());
        }
    }//GEN-LAST:event_btnValidarAdminActionPerformed

    private void combobxEstadoValidarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxEstadoValidarItemStateChanged
        habilitarBotones("Validar");
    }//GEN-LAST:event_combobxEstadoValidarItemStateChanged

    private void btnAceptarValidacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarValidacionActionPerformed
        String matricula = txtMatriculaValidar.getText();
        String userID = txtClienteValidar.getText();
        // tipo, matricula, usuario, estadoVehiculo, gasolina, limpieza, 
        // espejos, fechaInicio, fechaFinal, tipoPago, valorPago, observaciones
        String[] datos = {"", matricula, userID,
            combobxEstadoValidar.getSelectedItem().toString(),
            Boolean.toString(checkbxGasolina.isSelected()),
            Boolean.toString(checkbvLimpieza.isSelected()),
            Boolean.toString(checkbxEspejos.isSelected()), "", "", "", "",
            atxtObservaciones.getText()};

        double valor = alquilar.devolverVehiculo(controlVehiculo.encontrarVehiculo(matricula),
                userID, Integer.parseInt(txtKilometrajevalidar.getText()), datos);

        if (valor == 0) {
            JOptionPane.showMessageDialog(this, "No se ha efectuado la validación",
                    "Validación cancelada", 0);
        } else {
            // Vehiculo validado:
            JOptionPane.showMessageDialog(this, "Vehiculo validado con éxito, \n"
                    + " Debe recibir $" + valor, "Vehiculo validado", 1);
            // Borrar todos los valores y campos:
            jfrmValidarVehiculo.hide();
            limpiarCampos("Validar");
            limpiarCampos("Administrador");
            llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
        }
    }//GEN-LAST:event_btnAceptarValidacionActionPerformed

    private void btnCancelarValidacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarValidacionActionPerformed
        // Borrar todos los valores y campos:
        jfrmValidarVehiculo.hide();
        limpiarCampos("Validar");
        limpiarCampos("Administrador");
        llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
    }//GEN-LAST:event_btnCancelarValidacionActionPerformed
// ---------------------------- GENERAR PDF's ----------------------------------

    private void mnuAutosPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAutosPDFActionPerformed
        try {
            pdfs.generarVehiculoPDF(controlVehiculo.getVehiculosFiltro((byte) 0,
                    "Auto", "Seleccionar"), "Autos");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    ex.getCause().toString(), 0);
        }
    }//GEN-LAST:event_mnuAutosPDFActionPerformed

    private void mnuMotosPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMotosPDFActionPerformed
        try {
            pdfs.generarVehiculoPDF(controlVehiculo.getVehiculosFiltro((byte) 0,
                    "Moto", "Seleccionar"), "Motos");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    ex.getMessage(), ex.getCause().toString(), 0);
        }
    }//GEN-LAST:event_mnuMotosPDFActionPerformed

    private void mnuFurgonetasPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFurgonetasPDFActionPerformed
        try {
            pdfs.generarVehiculoPDF(controlVehiculo.getVehiculosFiltro((byte) 0,
                    "Furgoneta", "Seleccionar"), "Furgonetas");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    ex.getCause().toString(), 0);
        }
    }//GEN-LAST:event_mnuFurgonetasPDFActionPerformed

// -------------------------- VALIDACIONES FALTANTES ---------------------------

    private void txtCamposVehiculoCRUDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCamposVehiculoCRUDKeyTyped
        habilitarBotones("Vehiculo CRUD");
    }//GEN-LAST:event_txtCamposVehiculoCRUDKeyTyped

    private void txtMatriculaAdminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaAdminKeyReleased
        habilitarBotones("Administrador");
    }//GEN-LAST:event_txtMatriculaAdminKeyReleased

    private void btnLimpiarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarUsuarioActionPerformed
        limpiarCampos("Usuario");
    }//GEN-LAST:event_btnLimpiarUsuarioActionPerformed

    private void combobxEstadoValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobxEstadoValidarActionPerformed
        habilitarBotones("Validar");
    }//GEN-LAST:event_combobxEstadoValidarActionPerformed

    private void combobxVehiculoCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobxVehiculoCRUDActionPerformed
        habilitarBotones("Vehiculo CRUD");
    }//GEN-LAST:event_combobxVehiculoCRUDActionPerformed

    private void tblVehiculosCRUDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehiculosCRUDMouseClicked
        try {
            JTable table = obtenerTablaSeleccionada();
            if (table.getSelectedColumn() == 4) {
                // Está en la columna de activar/desactivar un vehiculo:
                String matricula = (String) table.getValueAt(table.getSelectedRow(), 0);
                boolean activado = (boolean) table.getValueAt(table.getSelectedRow(), 4);
                // false ----> lo va a desactivar.
                // true  ----> lo va a activar.
                String adicional = "";
                if (activado == true) {
                    adicional = "activar";
                } else if (activado == false) {
                    adicional = "desactivar";
                }
                int opc = JOptionPane.showConfirmDialog(this,
                        "¿Seguro que desea " + adicional + " el vehiculo seleccionado?",
                        "Confirmar " + adicional, JOptionPane.YES_NO_OPTION);
                if (opc == 0) {
                    // Admin confirma desactivar el vehiculo:
                    controlVehiculo.desactivarVehiculo(matricula, activado);
                    JOptionPane.showMessageDialog(this, "Vehiculo seleccionado "
                            + "ha sido \n activado/desactivado con éxito",
                            "Confirmación", 1);
                    llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
                } else {
                    // Admin rechaza la desactivación:
                    table.setValueAt((boolean) !activado, table.getSelectedRow(), 4);
                }
            }
        } catch (VehiculoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en CRUD", 0);
            // Por si no se puede desactivar el vehiculo:
            try {
                JTable table = obtenerTablaSeleccionada();
                int fila = table.getSelectedRow();
                boolean activado = (boolean) table.getValueAt(fila, 4);
                table.setValueAt(!activado, fila, 4);
            } catch (VehiculoException ex1) {
                JOptionPane.showMessageDialog(this, ex1.getMessage(),
                        "Error en CRUD", 0);
            }
        }
    }//GEN-LAST:event_tblVehiculosCRUDMouseClicked

    private void txtMatriculasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculasKeyTyped
        char validar = evt.getKeyChar();
        // Validar que solo se pueda ingresar máximo 6 letras en matricula:
        if (txtMatriculaAdmin.getText().length() == 6
                || txtMatriculaCRUD.getText().length() == 6
                || txtMatriculaValidar.getText().length() == 6
                || Character.isWhitespace(validar)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMatriculasKeyTyped

    private void txtKilometrajesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKilometrajesKeyTyped
        if (txtKilometrajevalidar.isFocusOwner()) {
            habilitarBotones("Validar");
        }
        char validar = evt.getKeyChar();
        // Validar que solo se pueda ingresar números y máximo hasta 999.999:
        if (txtKilometrajeCRUD.getText().length() == 6
                || txtKilometrajevalidar.getText().length() == 6
                || Character.isLetter(validar) || Character.isWhitespace(validar)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtKilometrajesKeyTyped

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        char validar = evt.getKeyChar();
        // Validar que solo pueda ingresar letras y sin espacios:
        if (Character.isDigit(validar) || Character.isWhitespace(validar)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtCorreosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreosKeyTyped
        char validar = evt.getKeyChar();
        // Validar que no pueda ingresar espacios:
        if (Character.isWhitespace(validar)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtCorreosKeyTyped

// ---------------------------- CARGAR CSV's EXTERNOS --------------------------
    private void mnuCargarAutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCargarAutosActionPerformed
        String archivo = obtenerArchivo();
        if (!archivo.isEmpty()) {
            ImportarCSV.cargarVehiculosExtra(controlVehiculo.getVehiculos("Auto"),
                    controlVehiculo.getMarcas(), "Auto", archivo);
            llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
            JOptionPane.showMessageDialog(this, "Autos cargados con éxito "
                    + "al sistema", "Carga exitosa", 1);
        }
    }//GEN-LAST:event_mnuCargarAutosActionPerformed

    private void mnuCargarMotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCargarMotosActionPerformed
        String archivo = obtenerArchivo();
        if (!archivo.isEmpty()) {
            ImportarCSV.cargarVehiculosExtra(controlVehiculo.getVehiculos("Moto"),
                    controlVehiculo.getMarcas(), "Moto", archivo);
            llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
            JOptionPane.showMessageDialog(this, "Motos cargados con éxito "
                    + "al sistema", "Carga exitosa", 1);
        }
    }//GEN-LAST:event_mnuCargarMotosActionPerformed

    private void mnuCargarFurgonetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCargarFurgonetasActionPerformed
        String archivo = obtenerArchivo();
        if (!archivo.isEmpty()) {
            ImportarCSV.cargarVehiculosExtra(controlVehiculo.getVehiculos("Furgoneta"),
                    controlVehiculo.getMarcas(), "Furgoneta", archivo);
            llenarTablaPrincipal("Administrador", tblVehiculosAdmin);
            JOptionPane.showMessageDialog(this, "Furgonetas cargadas con éxito "
                    + "al sistema", "Carga exitosa", 1);
        }
    }//GEN-LAST:event_mnuCargarFurgonetasActionPerformed
// ------------------------ ** CLIENTES **--------------------------------------
    private void mnuClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuClientesActionPerformed
        jfrmClientes.show();
        llenarTablaClientes();
    }//GEN-LAST:event_mnuClientesActionPerformed

    private void combobxTipoClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobxTipoClienteItemStateChanged
        llenarTablaClientes();
        txtCliente.setText("");
    }//GEN-LAST:event_combobxTipoClienteItemStateChanged

    private void txtClienteMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteMatriculaKeyTyped
        llenarTablaClientes();
    }//GEN-LAST:event_txtClienteMatriculaKeyTyped

    private void checkbxClientesHoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbxClientesHoyActionPerformed
        llenarTablaClientes();
    }//GEN-LAST:event_checkbxClientesHoyActionPerformed

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        txtCliente.setText((String) tblClientes.
                getValueAt(tblClientes.getSelectedRow(), 0));
        habilitarBotones("Cliente");
    }//GEN-LAST:event_tblClientesMouseClicked

    private void tblClientesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseDragged
        txtCliente.setText((String) tblClientes.
                getValueAt(tblClientes.getSelectedRow(), 0));
        habilitarBotones("Cliente");
    }//GEN-LAST:event_tblClientesMouseDragged

    private void btnLimpiarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarClienteActionPerformed
        limpiarCampos("Cliente");
    }//GEN-LAST:event_btnLimpiarClienteActionPerformed

    private void tblClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblClientesKeyPressed
        if (tblClientes.getSelectedRow() != -1) {
            txtCliente.setText((String) tblClientes.
                    getValueAt(tblClientes.getSelectedRow(), 0));
            habilitarBotones("Cliente");
        }
    }//GEN-LAST:event_tblClientesKeyPressed

    private void btnAlquilarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlquilarClienteActionPerformed
        String matricula = (String) tblClientes.getValueAt(tblClientes.getSelectedRow(), 1);
        Usuario user = controlUsuario.encontrarUsuarioID(txtCliente.getText());
        alquilar.alquilarVehiculo(controlVehiculo.encontrarVehiculo(matricula),
                user, null, null, "");
        llenarTablaClientes();
        JOptionPane.showMessageDialog(this, "Hora de entrega actualizada",
                "Vehiculo entregado", 1);
    }//GEN-LAST:event_btnAlquilarClienteActionPerformed

    private void btnValidarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarClienteActionPerformed
        jfrmValidarVehiculo.show();
        jfrmClientes.hide();
        txtClienteValidar.setText((String) tblClientes
                .getValueAt(tblClientes.getSelectedRow(), 0));
        String matricula = (String) tblClientes.getValueAt(tblClientes.getSelectedRow(), 1);
        txtMatriculaValidar.setText(matricula);
        atxtDatosValidar.setText(controlVehiculo.encontrarVehiculo(matricula)
                .getArrayDatosValidar());
    }//GEN-LAST:event_btnValidarClienteActionPerformed

    private void mnuReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReportesActionPerformed
        jfrmReportes.show();

        // Validaciones de fechas:
        jdcFechaInicialReporte.setMaxSelectableDate(fechaActual);
        jdcFechaInicialReporte.setDate(new Date(fechaActual.getYear(),
                fechaActual.getMonth() + 1, fechaActual.getDay() - 15));
        jdcFechaFinalReporte.setMaxSelectableDate(fechaActual);
        jdcFechaFinalReporte.setDate(fechaActual);

        banderaFecha = true;
        llenarTablaReporte();
        obtenerPromedios();

        // Para mostrar la gráfica de vehiculos disponibles/ocupados:
        graficas = new CrearGraficas();
        ChartPanel contenedor = graficas.
                generarGraficaDisponible(controlVehiculo.getVehiculos(""));
        jpDisponibles.add(contenedor);
        jpDisponibles.setVisible(true);
        contenedor.setSize(670, 350);
    }//GEN-LAST:event_mnuReportesActionPerformed

    private void jdcFechaInicialReportePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFechaInicialReportePropertyChange
        if (banderaFecha) {
            llenarTablaReporte();
            obtenerPromedios();
        }
    }//GEN-LAST:event_jdcFechaInicialReportePropertyChange

    private void jdcFechaFinalReportePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFechaFinalReportePropertyChange
        if (banderaFecha) {
            llenarTablaReporte();
            obtenerPromedios();
        }
    }//GEN-LAST:event_jdcFechaFinalReportePropertyChange

// ----------------------- LLENAR TABLAS ---------------------------------------
    private void llenarTablaPrincipal(String tipo, JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.getDataVector().removeAllElements();
        // Obtener los valores para el filtro:
        byte estado = 0;
        String vehiculo = "";
        String marca = "";

        if ("Administrador".equals(tipo)) {
            estado = (byte) combobxEstadoAdmin.getSelectedIndex();
            vehiculo = combobxVehiculoAdmin.getSelectedItem().toString();
            if (banderaMarcas) {
                marca = combobxMarcaAdmin.getSelectedItem().toString();
            }
        } else if ("Usuario".equals(tipo)) {
            estado = (byte) (cbxDisponibleUsuario.isSelected() ? 1 : 0);
            vehiculo = combobxVehiculoUsuario.getSelectedItem().toString();
            if (banderaMarcas) {
                marca = combobxMarcaUsuario.getSelectedItem().toString();
            }
        }

        // Luego, recorrer la lista DINÁMICA correspondiente:
        for (AbstractVehiculo seleccionado
                : controlVehiculo.getVehiculosFiltro(estado, vehiculo, marca)) {
            // Dependiendo del tipo de tabla, llena lo necesario:
            switch (tipo) {
                case "Administrador":
                    model.addRow(seleccionado.getObjectAdmin());
                    break;
                case "Usuario":
                    model.addRow(seleccionado.getObjectUsuario());
                    break;
            }
        }
        table.setModel(model);
        table.repaint();
    }

    private void llenarVehiculosCRUD() {
        // Array de tablas:
        String[] tipo = {"Auto", "Moto", "Furgoneta"};
        JTable[] table = {tblAutoCRUD, tblMotoCRUD, tblFurgonetaCRUD};

        for (int i = 0; i < table.length; i++) {
            DefaultTableModel model = (DefaultTableModel) table[i].getModel();
            model.getDataVector().removeAllElements();

            for (AbstractVehiculo seleccionado : controlVehiculo.getVehiculos(tipo[i])) {
                model.addRow(seleccionado.getObjectCRUD());
            }
            table[i].setModel(model);
        }
    }

    private void llenarUsuariosCRUD() {
        DefaultTableModel model = (DefaultTableModel) tblUsuarioCRUD.getModel();
        model.getDataVector().removeAllElements();
        controlUsuario.getUsuarios("").forEach((seleccionado) -> {
            model.addRow(seleccionado.getObjectCRUD());
        });
        tblUsuarioCRUD.setModel(model);
    }

    private void llenarTablaAlquilar() {
        DefaultTableModel model = (DefaultTableModel) tblUsuarioAlquilar.getModel();
        model.getDataVector().removeAllElements();
        controlUsuario.getUsuarios("Usuario").forEach((seleccionado) -> {
            // Sólo se necesitan llenar los usuarios:
            model.addRow(seleccionado.getObjectAlquilar());
        });
        tblUsuarioCRUD.setModel(model);
    }

    private void llenarTablaClientes() {
        DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
        model.getDataVector().removeAllElements();
        // Obtener los valores para el filtro:
        String tipo = combobxTipoCliente.getSelectedItem().toString();
        String matricula = txtMatriculaCliente.getText();
        boolean hoy = checkbxClientesHoy.isSelected();

        alquilar.getClientesFiltro(tipo, matricula, hoy).forEach((seleccionado) -> {
            model.addRow(seleccionado.getObjectCliente());
        });
        tblClientes.setModel(model);
        tblClientes.repaint();
    }

    private void llenarTablaReporte() {
        DefaultTableModel model = (DefaultTableModel) tblReportePromedio.getModel();
        model.getDataVector().removeAllElements();
        // Obtener los filtros:
        LocalDate fechaInicial = convertir.ConvertirFecha(jdcFechaInicialReporte.getDate());
        LocalDate fechaFinal = convertir.ConvertirFecha(jdcFechaFinalReporte.getDate());
        List<String> datos = ImportarCSV.cargarReporteHoras();
        for (String seleccionado : datos) {
            String[] x = seleccionado.split(",");
            Object[] obj = {x[0],
                Float.parseFloat(x[1]) / controlVehiculo.getVehiculos("Auto").size(),
                Float.parseFloat(x[2]) / controlVehiculo.getVehiculos("Moto").size(),
                Float.parseFloat(x[3]) / controlVehiculo.getVehiculos("Furgoneta").size()};

            // Para encontrar la fecha del array:
            String[] datosFecha = x[0].split("/");
            LocalDate fecha = LocalDate.of(LocalDate.now().getYear(),
                    Integer.parseInt(datosFecha[1]), Integer.parseInt(datosFecha[0]));
            // Si las dos fechas están especificadas:
            if (banderaFecha && fecha.compareTo(fechaInicial) >= 0
                    && fecha.compareTo(fechaFinal) <= 0) {
                model.addRow(obj);
            }
        }
        tblReportePromedio.setModel(model);
        tblReportePromedio.repaint();
    }

    private void llenarCombobxMarcas(JComboBox combobx, JComboBox tipo) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        model.addElement("Seleccionar");

        // Llena el combobx de acuerdo al tipo de vehiculo, en el otro combobx
        for (TipoMarca seleccionado : controlVehiculo.getMarcas()) {
            if (seleccionado.getTipoVehiculo().compareTo((String) tipo.getSelectedItem()) == 0) {
                model.addElement(seleccionado);
            }
        }
        combobx.setModel(model);
    }

// ------------------------------ MÉTODOS VARIOS -------------------------------
    private void obtenerPromedios() {
        float[] valores = new float[3];
        float[] suma = {0, 0, 0};
        int cont = tblReportePromedio.getRowCount();
        for (int i = 0; i < cont; i++) {
            suma[0] = (float) tblReportePromedio.getValueAt(i, 1) + suma[0];      // Autos
            suma[1] = (float) tblReportePromedio.getValueAt(i, 2) + suma[1];      // Motos
            suma[2] = (float) tblReportePromedio.getValueAt(i, 3) + suma[2];      // Furgonetas
        }
        valores[0] = suma[0] / cont;
        valores[1] = suma[1] / cont;
        valores[2] = suma[2] / cont;
        txtPromedioAutos.setText(String.valueOf(valores[0]));
        txtPromedioMotos.setText(String.valueOf(valores[1]));
        txtPromedioFurgonetas.setText(String.valueOf(valores[2]));

        // Para generar la gráfica:
        graficas = new CrearGraficas();
        ChartPanel contenedor = graficas.generarPromedioHoras(valores);
        jpGraficaPromedio.add(contenedor);
        jpGraficaPromedio.setVisible(true);
        contenedor.setSize(310, 310);
    }

    private String obtenerArchivo() {
        // Creamos un filtro para que se reconozcan los csv's:
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo CSV", "csv");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filtro);

        int result = fileChooser.showOpenDialog(fileChooser);

        if (result == JFileChooser.APPROVE_OPTION) {
            return fileChooser.getSelectedFile().getPath();
        }
        return "";
    }

    private JTable obtenerTablaSeleccionada() throws VehiculoException {
        // Puedo saber con certeza que la tabla mostrada es la del vehiculo:
        if (tblAutoCRUD.isShowing()) {
            return tblAutoCRUD;
        } else if (tblMotoCRUD.isShowing()) {
            return tblMotoCRUD;
        } else if (tblFurgonetaCRUD.isShowing()) {
            return tblFurgonetaCRUD;
        }
        // Si llega acá, el usuario no seleccionó algo de las tablas:
        throw new VehiculoException("Debe seleccionar alguna tabla");
    }

    private void obtenerUsuarioExistente(String tipo) {
        Usuario user = controlUsuario.encontrarUsuarioCorreo(tipo);
        // Si retorna null, significa que ingresó un userID:
        if (user == null) {
            user = controlUsuario.encontrarUsuarioID(tipo);
        }

        txtCorreoUsuario.setText(user.getCorreo());
        txtPasswordUsuario.setText(user.getPassword());
        combobxTipoUsuario.setSelectedIndex(user.getTipousuario().getCodigo());
        txtNombreUsuario.setText(user.getNombre());
        txtApellidoUsuario.setText(user.getApellido());
        spnEdadUsuario.setValue(user.getEdad());
        cbxVisionCRUD.setSelected(user.isProblemasvision());
        cbxAuditivoCRUD.setSelected(user.isProblemasauditivos());

        // Deshabilito los campos correspondientes:
        combobxTipoUsuario.setEnabled(false);
        txtCorreoUsuario.setEnabled(false);

        habilitarBotones("Usuario CRUD");
    }

    private void obtenerVehiculoExistente(String matricula) {
        Object[] valores = controlVehiculo.buscarValoresVehiculo(matricula);

        // {tipo, matricula, kilometraje, marca, anio, 
        //        valorAlquiler[0], valorAlquiler[1], adicional}
        switch ((String) valores[0]) {
            case "Auto":
                combobxVehiculoCRUD.setSelectedIndex(1);
                cbxExtrasCRUD.setSelected((boolean) valores[7]);
                break;
            case "Moto":
                combobxVehiculoCRUD.setSelectedIndex(2);
                cbxCascoCRUD.setSelected((boolean) valores[7]);
                break;
            case "Furgoneta":
                combobxVehiculoCRUD.setSelectedIndex(3);
                sldCapacidadCRUD.setValue(Integer.parseInt(valores[7].toString()));
                break;
        }

        txtMatriculaCRUD.setText((String) valores[1]);
        txtKilometrajeCRUD.setText(valores[2].toString());

        combobxMarcaCRUD.setSelectedItem(valores[3]);
        jycVehiculoCRUD.setValue(Integer.parseInt(valores[4].toString()));
        sldTarifaDiaCRUD.setValue((int) valores[5]);
        sldTarifaKmCRUD.setValue((int) valores[6]);

        // Deshabilito los campos correspondientes:
        combobxVehiculoCRUD.setEnabled(false);
        txtMatriculaCRUD.setEnabled(false);

        habilitarBotones("Vehiculo CRUD");
    }

    private boolean verificarVehiculo() {
        // Verificar que la MATRICULA ingresada sea de un vehiculo ACTIVO:
        String matricula = txtMatriculaAdmin.getText();
        for (AbstractVehiculo vehiculo
                : controlVehiculo.getVehiculosFiltro((byte) 0, "Seleccionar", "")) {
            if (vehiculo.getMatricula().compareTo(matricula) == 0) {
                return true;
            }
        }
        return false;
    }

    private boolean verificarUsuario() {
        // Verificar que el usuario sea válido:
        String cliente = txtClienteAlquilar.getText();
        for (Usuario user : controlUsuario.getUsuarios("Usuario")) {
            if (user.getUserID().compareTo(cliente) == 0) {
                return true;
            }
        }
        return false;
    }

    private void habilitarBotones(String tipo) {
        // Cuando el usuario/admin documenta TODOS los campos necesarios:
        if (tipo.compareTo("Registro") == 0
                && !txtNuevoNombre.getText().isEmpty()
                && !txtNuevoApellido.getText().isEmpty()
                && !txtNuevoCorreo.getText().isEmpty()
                && cbxTerminos.isSelected() == true
                && txtNuevaPassword.getPassword().length != 0
                && txtConfirmarPassword.getPassword().length != 0) {

            btnAceptarRegistro.setEnabled(true);
        } else if (tipo.compareTo("Administrador") == 0
                && bandera && verificarVehiculo()
                && !txtMatriculaAdmin.getText().isEmpty()) {

            btnAlquilarAdmin.setEnabled(true);
            btnValidarAdmin.setEnabled(true);
        } else if (tipo.compareTo("Usuario CRUD") == 0
                && !txtNombreUsuario.getText().isEmpty()
                && !txtApellidoUsuario.getText().isEmpty()
                && !txtCorreoUsuario.getText().isEmpty()
                && combobxTipoUsuario.getSelectedIndex() != 0
                && txtPasswordUsuario.getPassword().length != 0) {

            btnGuardarUsuario.setEnabled(true);
        } else if (tipo.compareTo("Vehiculo CRUD") == 0
                && combobxVehiculoCRUD.getSelectedIndex() != 0
                && !txtMatriculaCRUD.getText().isEmpty()
                && combobxMarcaCRUD.getSelectedIndex() != 0
                && !txtKilometrajeCRUD.getText().isEmpty()) {

            btnGuardarVehiculo.setEnabled(true);
        } else if (tipo.compareTo("Alquilar") == 0
                && banderaAlquilar && verificarUsuario()
                && jdcInicialAlquilar.getDate() != null
                && jdcFinalAlquilar.getDate() != null) {

            btnAceptarAlquilar.setEnabled(true);
        } else if (tipo.compareTo("Validar") == 0
                && combobxEstadoValidar.getSelectedIndex() != 0
                && !txtKilometrajevalidar.getText().isEmpty()) {

            btnAceptarValidacion.setEnabled(true);
        } else if (tipo.compareTo("Cliente") == 0
                && fechaLocal.compareTo((String) tblClientes.
                        getValueAt(tblClientes.getSelectedRow(), 2)) == 0) {

            btnValidarCliente.setEnabled(false);
            btnAlquilarCliente.setEnabled(true);
        } else if (tipo.compareTo("Cliente") == 0
                && fechaLocal.compareTo((String) tblClientes.
                        getValueAt(tblClientes.getSelectedRow(), 2)) >= 0) {

            btnAlquilarCliente.setEnabled(false);
            btnValidarCliente.setEnabled(true);
        } else {
            btnAceptarRegistro.setEnabled(false);
            btnGuardarUsuario.setEnabled(false);
            btnGuardarVehiculo.setEnabled(false);
            btnAlquilarAdmin.setEnabled(false);
            btnValidarAdmin.setEnabled(false);
            btnAceptarAlquilar.setEnabled(false);
            btnAceptarValidacion.setEnabled(false);
            btnAlquilarCliente.setEnabled(false);
            btnValidarCliente.setEnabled(false);
        }
    }

    public void limpiarCampos(String tipo) {
        switch (tipo) {
            case "Registro": {
                txtNuevoNombre.setText("");
                txtNuevoApellido.setText("");
                txtNuevoCorreo.setText("");
                txtNuevaPassword.setText("");
                txtConfirmarPassword.setText("");
                spnNuevaEdad.setValue(18);
                cbxAuditivoRegistro.setSelected(false);
                cbxVisionRegistro.setSelected(false);
                cbxTerminos.setSelected(false);
                break;
            }
            case "Administrador": {
                combobxEstadoAdmin.setSelectedIndex(0);
                combobxVehiculoAdmin.setSelectedIndex(0);
                combobxMarcaAdmin.setEnabled(false);
                txtMatriculaAdmin.setText("");

                tblVehiculosAdmin.clearSelection();
                llenarTablaPrincipal("Administrador", tblVehiculosAdmin);

                btnAlquilarAdmin.setEnabled(false);
                btnValidarAdmin.setEnabled(false);
            }
            case "Usuario": {
                combobxVehiculoUsuario.setSelectedIndex(0);
                cbxDisponibleUsuario.setSelected(false);
                btngTarifaUsuario.clearSelection();
                jdcInicialUsuario.setDate(null);
                jdcFinalUsuario.setDate(null);

                combobxMarcaUsuario.setEnabled(false);
            }
            case "Usuario CRUD": {
                combobxTipoUsuario.setSelectedIndex(0);
                txtNombreUsuario.setText("");
                txtApellidoUsuario.setText("");
                txtCorreoUsuario.setText("");
                txtPasswordUsuario.setText("");
                spnEdadUsuario.setValue(18);
                cbxAuditivoCRUD.setSelected(false);
                cbxVisionCRUD.setSelected(false);

                combobxTipoUsuario.setEnabled(true);
                txtCorreoUsuario.setEnabled(true);

                tblUsuarioCRUD.clearSelection();
                editarUsuario = false;
                break;
            }
            case "Vehiculo CRUD": {
                combobxVehiculoCRUD.setSelectedIndex(0);
                txtMatriculaCRUD.setText("");
                jycVehiculoCRUD.setYear(2020);
                txtKilometrajeCRUD.setText("");
                cbxExtrasCRUD.setSelected(false);
                cbxCascoCRUD.setSelected(false);
                sldCapacidadCRUD.setValue(800);
                sldTarifaDiaCRUD.setValue(100000);
                sldTarifaKmCRUD.setValue(1000);

                tblAutoCRUD.clearSelection();
                tblMotoCRUD.clearSelection();
                tblFurgonetaCRUD.clearSelection();

                combobxVehiculoCRUD.setEnabled(true);
                txtMatriculaCRUD.setEnabled(true);
                combobxMarcaCRUD.setEnabled(false);
                editarVehiculo = false;
                break;
            }
            case "Alquilar": {
                txtMatriculaAlquilar.setText("");
                atxtDatosAlquilar.setText("Datos del vehiculo: ");
                txtClienteAlquilar.setText("");
                jdcInicialAlquilar.setDate(null);
                jdcFinalAlquilar.setDate(null);
                tblUsuarioAlquilar.clearSelection();

                btnAceptarAlquilar.setEnabled(false);
                break;
            }
            case "Validar": {
                txtMatriculaValidar.setText("");
                combobxEstadoValidar.setSelectedIndex(0);
                txtKilometrajevalidar.setText("");
                checkbxGasolina.setSelected(false);
                checkbxEspejos.setSelected(false);
                checkbvLimpieza.setSelected(false);

                atxtDatosValidar.setText("Vehiculo no válido o no está alquilado");
                atxtObservaciones.setText("");

                btnAceptarValidacion.setEnabled(false);
                break;
            }
            case "Cliente": {
                combobxTipoCliente.setSelectedIndex(0);
                txtMatriculaCliente.setText("");
                txtCliente.setText("");
                checkbxClientesHoy.setSelected(false);
                tblClientes.clearSelection();
                btnAlquilarCliente.setEnabled(false);
                btnValidarCliente.setEnabled(false);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException
                | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MDIPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea atxtDatosAlquilar;
    private javax.swing.JTextArea atxtDatosValidar;
    private javax.swing.JTextArea atxtObservaciones;
    private javax.swing.JButton btnAceptarAlquilar;
    private javax.swing.JButton btnAceptarRegistro;
    private javax.swing.JButton btnAceptarValidacion;
    private javax.swing.JButton btnAlquilarAdmin;
    private javax.swing.JButton btnAlquilarCliente;
    private javax.swing.JButton btnCancelarAlquilar;
    private javax.swing.JButton btnCancelarRegistro;
    private javax.swing.JButton btnCancelarValidacion;
    private javax.swing.JToggleButton btnEditarUsuario;
    private javax.swing.JToggleButton btnEditarVehiculo;
    private javax.swing.JToggleButton btnEliminarUsuario;
    private javax.swing.JToggleButton btnEliminarVehiculo;
    private javax.swing.JToggleButton btnGuardarUsuario;
    private javax.swing.JToggleButton btnGuardarVehiculo;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnInvitado;
    private javax.swing.JButton btnLimpiarAdmin;
    private javax.swing.JButton btnLimpiarCliente;
    private javax.swing.JButton btnLimpiarUsuario;
    private javax.swing.JButton btnLimpiarUsuarioCRUD;
    private javax.swing.JButton btnLimpiarVehiculoCRUD;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnValidarAdmin;
    private javax.swing.JButton btnValidarCliente;
    private javax.swing.ButtonGroup btngTarifaAlquilar;
    private javax.swing.ButtonGroup btngTarifaUsuario;
    private javax.swing.JCheckBox cbxAuditivoCRUD;
    private javax.swing.JCheckBox cbxAuditivoRegistro;
    private javax.swing.JCheckBox cbxCascoCRUD;
    private javax.swing.JCheckBox cbxDisponibleUsuario;
    private javax.swing.JCheckBox cbxExtrasCRUD;
    private javax.swing.JCheckBox cbxTerminos;
    private javax.swing.JCheckBox cbxVisionCRUD;
    private javax.swing.JCheckBox cbxVisionRegistro;
    private javax.swing.JCheckBox checkbvLimpieza;
    private javax.swing.JCheckBox checkbxClientesHoy;
    private javax.swing.JCheckBox checkbxEspejos;
    private javax.swing.JCheckBox checkbxGasolina;
    private javax.swing.JComboBox<String> combobxEstadoAdmin;
    private javax.swing.JComboBox<String> combobxEstadoValidar;
    private javax.swing.JComboBox<String> combobxMarcaAdmin;
    private javax.swing.JComboBox<String> combobxMarcaCRUD;
    private javax.swing.JComboBox<String> combobxMarcaUsuario;
    private javax.swing.JComboBox<String> combobxTipoCliente;
    private javax.swing.JComboBox<String> combobxTipoUsuario;
    private javax.swing.JComboBox<String> combobxVehiculoAdmin;
    private javax.swing.JComboBox<String> combobxVehiculoCRUD;
    private javax.swing.JComboBox<String> combobxVehiculoUsuario;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCapacidad;
    private javax.swing.JLabel jLabelTarifaDia;
    private javax.swing.JLabel jLabelTarifaKm;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcFechaFinalReporte;
    private com.toedter.calendar.JDateChooser jdcFechaInicialReporte;
    private com.toedter.calendar.JDateChooser jdcFinalAlquilar;
    private com.toedter.calendar.JDateChooser jdcFinalUsuario;
    private com.toedter.calendar.JDateChooser jdcInicialAlquilar;
    private com.toedter.calendar.JDateChooser jdcInicialUsuario;
    private javax.swing.JInternalFrame jfrmAlquilarVehiculo;
    private javax.swing.JInternalFrame jfrmClientes;
    private javax.swing.JInternalFrame jfrmLogin;
    private javax.swing.JInternalFrame jfrmPrincipalAdmin;
    private javax.swing.JInternalFrame jfrmPrincipalUsuario;
    private javax.swing.JInternalFrame jfrmRegistrarUsuario;
    private javax.swing.JInternalFrame jfrmReportes;
    private javax.swing.JInternalFrame jfrmUsuariosCRUD;
    private javax.swing.JInternalFrame jfrmValidarVehiculo;
    private javax.swing.JInternalFrame jfrmVehiculosCRUD;
    private javax.swing.JMenu jmnuArchivo;
    private javax.swing.JMenu jmnuEditar;
    private javax.swing.JMenu jmnuPDF;
    private javax.swing.JPanel jpAutoCRUD;
    private javax.swing.JPanel jpDatosAlquilar;
    private javax.swing.JPanel jpDatosCliente;
    private javax.swing.JPanel jpDatosMostrar;
    private javax.swing.JPanel jpDatosPromedio;
    private javax.swing.JPanel jpDatosUsuario;
    private javax.swing.JPanel jpDatosVehiculo;
    private javax.swing.JPanel jpDisponibles;
    private javax.swing.JPanel jpFiltrosAdmin;
    private javax.swing.JPanel jpFiltrosUsuario;
    private javax.swing.JPanel jpFurgonetaCRUD;
    private javax.swing.JPanel jpGraficaPromedio;
    private javax.swing.JPanel jpMotoCRUD;
    private javax.swing.JPanel jpPromedios;
    private javax.swing.JPanel jpTablaAdmin;
    private javax.swing.JPanel jpTablaClientes;
    private javax.swing.JPanel jpTablaUsuario;
    private javax.swing.JPanel jpUsuarioCRUD;
    private javax.swing.JTabbedPane jtpTablasVehiculos;
    private com.toedter.calendar.JYearChooser jycVehiculoCRUD;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuAutosPDF;
    private javax.swing.JMenuBar mnuBarAdmin;
    private javax.swing.JMenuItem mnuCargarAutos;
    private javax.swing.JMenuItem mnuCargarFurgonetas;
    private javax.swing.JMenuItem mnuCargarMotos;
    private javax.swing.JMenuItem mnuCerrarSesion;
    private javax.swing.JMenuItem mnuClientes;
    private javax.swing.JMenuItem mnuEditarUsuarios;
    private javax.swing.JMenuItem mnuEditarVehiculos;
    private javax.swing.JMenuItem mnuFurgonetasPDF;
    private javax.swing.JMenu mnuGeneral;
    private javax.swing.JMenuItem mnuMotosPDF;
    private javax.swing.JMenuItem mnuReportes;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JRadioButton rbtnTarifaDiaAlquilar;
    private javax.swing.JRadioButton rbtnTarifaDiaUsuario;
    private javax.swing.JRadioButton rbtnTarifaKmAlquilar;
    private javax.swing.JRadioButton rbtnTarifaKmUsuario;
    private javax.swing.JSlider sldCapacidadCRUD;
    private javax.swing.JSlider sldTarifaDiaCRUD;
    private javax.swing.JSlider sldTarifaKmCRUD;
    private javax.swing.JSpinner spnEdadUsuario;
    private javax.swing.JSpinner spnNuevaEdad;
    private javax.swing.JTable tblAutoCRUD;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblFurgonetaCRUD;
    private javax.swing.JTable tblMotoCRUD;
    private javax.swing.JTable tblReportePromedio;
    private javax.swing.JTable tblUsuarioAlquilar;
    private javax.swing.JTable tblUsuarioCRUD;
    private javax.swing.JTable tblVehiculosAdmin;
    private javax.swing.JTable tblVehiculosUsuario;
    private javax.swing.JTextField txtApellidoUsuario;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtClienteAlquilar;
    private javax.swing.JTextField txtClienteValidar;
    private javax.swing.JPasswordField txtConfirmarPassword;
    private javax.swing.JTextField txtCorreoUsuario;
    private javax.swing.JTextField txtKilometrajeCRUD;
    private javax.swing.JTextField txtKilometrajevalidar;
    private javax.swing.JTextField txtMatriculaAdmin;
    private javax.swing.JTextField txtMatriculaAlquilar;
    private javax.swing.JTextField txtMatriculaCRUD;
    private javax.swing.JTextField txtMatriculaCliente;
    private javax.swing.JTextField txtMatriculaValidar;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JPasswordField txtNuevaPassword;
    private javax.swing.JTextField txtNuevoApellido;
    private javax.swing.JTextField txtNuevoCorreo;
    private javax.swing.JTextField txtNuevoNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordUsuario;
    private javax.swing.JTextField txtPromedioAutos;
    private javax.swing.JTextField txtPromedioFurgonetas;
    private javax.swing.JTextField txtPromedioMotos;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

}
